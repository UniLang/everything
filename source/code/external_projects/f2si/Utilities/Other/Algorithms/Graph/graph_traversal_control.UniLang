􏶞p􏶟
􏷲traversal controls used inside custom functions given to traversal algorithms􏷱
􏷰These settings are passed into the custom visitor functions each time.
The custom visitor functions can set a trigger to affect how the rest of the traversal behaves.
For example:  Say you are traversing an electrical system via depth first search and applying electrical power.  
If one of the vertexes is "broken", you can set "stop sub traversal" to true to stop traversing down that path.
It won't stop the whole traversal though, which is probably what you want.  

"Stop traversal" would give up entirely. 
There is no need to "stop sub traversal" if you are also "stopping traversal".􏷯
􏷮Algorithms􏷭􏷮Graph􏷭
􏷬Trevor Hickey􏷫

􏷤􏷣􏷦stdioLib􏷥􏴓d􏴔􏴑BOOL􏴒

􏷘+􏷗􏷒􏶐􏷑
􏷐Initialize the 􏶐􏷏
􏶠􏶐 will be in an invalid state until initialized􏶡
􏶴
  􏶲We want these false by default.􏶱
  􏶲A user may trigger true on them during particular visit􏶱
  􏶲Say they stop a sub traversal on a particular visit,􏶱
  􏶲we expect it to be reset to false on the next visit􏶱
  􏵴stop traversal􏵵 = FALSE;
  􏵴stop sub traversal􏵵 = FALSE;
􏶳

􏷘+􏷗􏷒reset􏷑
􏷐Resets the control triggers for next visitation􏷏
􏶠the graph algorithm resets the triggers for the user on each visit of a graph element􏶡
􏶴
  􏵴stop traversal􏵵 = FALSE;
  􏵴stop sub traversal􏵵 = FALSE;
􏶳

􏶨Completely stop the traversal algorithm􏶧
􏶦no other elements will be traversed after this flag is set to true.  
It will always be false going into a function􏶥
􏶘-g􏶙􏶮BOOL􏶭􏶬stop traversal􏶫􏶪􏶩

􏶨Stop a separate sub traversal􏶧
􏶦This is useful in depth first traversals, where you want to stop traversing down
a particular path, but you don't want to give up traversing entirely.
It will always be false going into a function􏶥
􏶘-g􏶙􏶮BOOL􏶭􏶬stop sub traversal􏶫􏶪􏶩
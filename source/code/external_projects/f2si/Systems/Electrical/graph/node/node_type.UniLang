􏶞g􏶟
􏷲A node type associated to the generic node of the electrical graph.􏷱
􏷰Describes what the node is specifically, but does not have an affect on the electrical graph􏷯

􏷮Electrical􏷭 􏷮Node􏷭
􏷬Trevor Hickey􏷫

􏷤􏷣􏷦Defs􏷥􏴓d􏴔􏴑BOOL􏴒
􏷤s􏷣􏷦string􏷥􏴓d􏴔􏴑strcmp()􏴒


􏶊The type of electrical component that an electrical graph node represents.􏶉
􏶈For an electrical circuit, nodes represent all electrical components including 'ground'.
'ground' is a node type, but they are NOT something that a user of the graph will need to specify.
It is known based on the API methods called.

'Ground' will be created internally by the graph, to help manage connections, and internal logic.
A user will only need to interact with the graph's interface to connect components together and specify which ones go to ground.
A user should not ever specify ground themselves when describing and building up their circuit.

You will notice that there is no WIRE type, and that's because wires are the edges of the graph.  They are not the nodes themselves.

Note 1: Ground is important for calculating complete paths.
Note 2: Because of the graph's interface, connecting components will automatically put a wire between them.
Note 3: All other node types can be used to perform specific functionality as needed by the user, but the electrical graph itself does not
rely on, or do anything special when encountering other node types; it simply stores them so they can be queried later. 
A traversal algorithm would have special logic for ground.  That way it can detect complete paths.

Note 4: other node types can be created as we come across a need for them.􏶇
􏵮+i􏵯􏶀node type􏶋
􏳿power source􏴀􏳽an electrical node type that acts as an initial starting point for power distribution􏳾
􏳿grounding􏴀􏳽an electrical node that acts as a grounding and completes the electrical circuit􏳾
􏶆antenna􏶅
􏶆battery􏶅􏳻power source􏳼
􏶆breaker􏶅
􏶆bus􏶅
􏶆device􏶅􏶂devices are often leaf nodes of the graph,
and usually the last nodes that branch off the bus.
They can help bridge the power communication gap between the electrical system and other systems􏶁
􏶆diode􏶅
􏶆epu􏶅􏳻power source􏳼
􏶆fan􏶅
􏶆fire extinguisher􏶅
􏶆fuse􏶅
􏶆ignitor􏶅􏶂most commonly found in the engine􏶁
􏶆generator􏶅􏳻power source􏳼
􏶆earth ground􏶅􏳻grounding􏳼􏶂Used internally by the graph.  Should not be used by the client of the graph.􏶁
􏶆power ground􏶅􏳻grounding􏳼􏶂Used internally by the graph.  Should not be used by the client of the graph.􏶁
􏶆signal ground􏶅􏳻grounding􏳼􏶂Used internally by the graph.  Should not be used by the client of the graph.􏶁
􏶆coil􏶅􏶂mainly utilized inside higher level graph nodes in order to emulate electromagnetism or semiconductors (via triggers)􏶁
􏶆junction􏶅􏶂sometimes you need to join multiple wires together, but where they meet is nothing important􏶁
􏶆switch􏶅􏶂usually represents a physical switch that a pilot could use􏶁
􏶆dial􏶅􏶂usually represents a physical dial that a pilot can turn􏶁
􏶆relay􏶅
􏶆resistor􏶅
􏶆light􏶅
􏶆camera􏶅
􏶆pump􏶅
􏶆valve􏶅
􏶆sensor􏶅􏶂Often there are sensors that observe another node on the graph, but they can also be powered/unpowered􏶁

􏶊higher level node types built out of existing node types􏶉
􏶈consider node types as the building blocks.  With them, you can construct higher level electrical components􏶇
􏵮+i􏵯􏶀higher node type􏶋
􏳿special relay􏴀􏳽a type of relay that behaves differently from a normal node relay􏳾
􏳿logic gate􏴀􏳽one of the logic gates as a physical implementation of boolean functions􏳾
􏶆norm open relay􏶅􏳻special relay􏳼􏶂a relay that automatically opens when it loses power􏶁
􏶆power relay􏶅􏳻special relay􏳼􏶂contains a charged coil that pulls a disconnected relay through electromagnetism􏶁
􏶆and gate􏶅􏳻logic gate􏳼􏶂an AND gate for power.  two power inputs that determine one power output.
The default behavior of two nodes meeting at another node has the behavior of an OR gate by default􏶁
􏶆or gate􏶅􏳻logic gate􏳼􏶂logic gate􏶁
􏶆not gate􏶅􏳻logic gate􏳼􏶂logic gate􏶁
􏶆xor gate􏶅􏳻logic gate􏳼􏶂logic gate􏶁
􏶆nand gate􏶅􏳻logic gate􏳼􏶂logic gate􏶁
􏶆nor gate􏶅􏳻logic gate􏳼􏶂logic gate􏶁
􏶆xnor gate􏶅􏳻logic gate􏳼􏶂logic gate􏶁
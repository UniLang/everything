􏶞p􏶟
􏷲A boolean malfunction that can take place on a system􏷱
􏷰Boolean malfunctions are triggered by the instructor􏷯
􏷮electrical􏷭􏷮malfunctions􏷭
􏷬Trevor Hickey􏷫

􏷤s􏷣􏷦stdioLib􏷥􏴓1􏴔􏴑BOOL􏴒
􏷤􏷣􏷦ascii_string􏷥􏴓d􏴔􏴑AsciiStringT􏴒
􏷤􏷣􏷦json􏷥􏴓d􏴔􏴑JSON_Object􏴒


CONSTRUCTOR:
􏷘+􏷗􏷒􏶐􏷑
􏴅memory management􏴆
􏷐Initialize the 􏶐􏷏
􏶠􏶐 will be in an invalid state until initialized
The malfunction starts inactive and is expected to be set later􏶡
􏶜􏶝􏷆char[]􏷅􏷄name􏷃􏷀the name of the malfunction􏶿
􏶜􏶝􏷆char[]􏷅􏷄description􏷃􏷀the description of the malfunction􏶿
􏶜􏶝􏷆char[]􏷅􏷄id􏷃􏷀the unique ID of the malfunction􏶿
􏶴
  􏶲the node initializes without any malfunctions􏶱
  􏵴is activated􏵵 = FALSE;
  InitializeAsciiString(&􏵴name􏵵,􏵶name􏵷);
  InitializeAsciiString(&􏵴description􏵵,􏵶description􏵷);
  InitializeAsciiString(&􏵴id􏵵,􏵶id􏵷);
  
􏶳

􏷘+􏷗􏷒^􏶐􏷑
􏴅memory management􏴆
􏷐Copy constructor for 􏶐􏷏
􏶠Performs the necessary deep copy􏶡
􏶜r􏶝􏷆void􏷅􏷄self􏷃􏷀the 􏶐 to copy construct from􏶿
􏶴
    􏶲implicit forwarding casts􏶱
    􏵲perform necessary deep copies􏵳􏵶self􏵷);
    􏵲perform necessary shallow copies􏵳􏵶self􏵷);
􏶳

􏷘+􏷗􏷒~􏶐􏷑
􏴅memory management􏴆
􏷐Destruct the 􏶐􏷏
􏶠􏶐 will leak memory unless destructed􏶡
􏶴
  􏶲implicit forwarding cast􏶱
  􏵲destruct􏵳);
􏶳

􏷘-􏷗􏷒destruct􏷑
􏴅memory management􏴆
􏷐Destruct the 􏶐􏷏
􏶠􏶐 will leak memory unless destructed􏶡
􏶴
  􏶲C does not have destructors.􏶱
  DestructAsciiStringT(&􏵴name􏵵);
  DestructAsciiStringT(&􏵴description􏵵);
  DestructAsciiStringT(&􏵴id􏵵);
􏶳


􏷘-􏷗􏷒perform necessary deep copies􏷑
􏴅memory management􏴆
􏷐perform the necessary deep copies􏷏
􏶠performs deep copies on only the dynamically allocating data members􏶡
􏶜r􏶝􏷆BooleanMalfunctionT􏷅􏷄self􏷃􏷀the 􏶐 to copy construct from􏶿
􏶴
    􏶲perform deep copy􏶱
    CopyInitializeAsciiStringT(&􏵴name􏵵,&􏵶self􏵷->m_tLocals.m_tName);
    CopyInitializeAsciiStringT(&􏵴description􏵵,&􏵶self􏵷->m_tLocals.m_tDescription);
    CopyInitializeAsciiStringT(&􏵴id􏵵,&􏵶self􏵷->m_tLocals.m_tId);
􏶳

􏷘-􏷗􏷒perform necessary shallow copies􏷑
􏴅memory management􏴆
􏷐perform the necessary deep copies􏷏
􏶠performs deep copies on only the dynamically allocating data members􏶡
􏶜r􏶝􏷆BooleanMalfunctionT􏷅􏷄self􏷃􏷀the 􏶐 to copy construct from􏶿
􏶴
    􏶲perform shallow copies􏶱
    􏵴is activated􏵵 = 􏵶self􏵷->m_tLocals.m_bIsActivated;
􏶳


TRANSFORMERS:
􏷘+􏷗􏷒set􏷑
􏴅transformers􏴆
􏷐activate or deactivate the malfunction based on a boolean value􏷏
􏶠this will affect the internal state of the malfunction.􏶡
􏶜􏶝􏷆bool􏷅􏷄is activated􏷃􏷀true = activated / false = deactivated􏶿
􏶴
    􏵴is activated􏵵 = 􏵶is activated􏵷;
􏶳

OBSERVERS:


􏶨the activation state of the malfunction􏶧
􏶦The malfunction is either activated or deactivated􏶥
􏶘-ip~=􏶙􏶰􏶯􏶮bool􏶭􏶬is activated􏶫􏵚􏵛􏶪􏶩

􏶨the name of the malfunction􏶧
􏶦if the name is not enough to identify the malfunction, read the description􏶥
􏶘-*ip~=􏶙􏶰􏶯􏶮AsciiStringT􏶭􏶬name􏶫􏵚􏵛􏶪􏶩

􏶨a human-readable description of the malfunction􏶧
􏶦if the description is not enough to identify the malfunction, see the ID􏶥
􏶘-ip~=􏶙􏶰􏶯􏶮AsciiStringT􏶭􏶬description􏶫􏵚􏵛􏶪􏶩

􏶨a unique malfunction id (seen in the malfunction spreadsheet)􏶧
􏶦for further detail about the malfunction, see the description􏶥
􏶘-ip~=􏶙􏶰􏶯􏶮AsciiStringT􏶭􏶬id􏶫􏵚􏵛􏶪􏶩
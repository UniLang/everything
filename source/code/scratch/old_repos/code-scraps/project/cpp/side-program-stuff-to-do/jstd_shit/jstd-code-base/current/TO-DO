Builder Object:
    [NO ] handle Windows/Linux Builds
    [NO ] handle static/dynamic library builds
    [NO ] handle single header build
    [NO ] handle pre-compiled headers
    [NO ] CREATE STATIC LIBRARIES
    [NO ] CREATE DYNAMIC LIBRARIES
    
Scanner Object:
    [NO ] Allow Fixing of warnings
    [NO ] Output Scan Stats (maybe flag also?

    [NO ] Compacts - check for duplicates
    [NO ] Compacts -check for empty lines
    
Exporter Object:
    [NO ] Read in new function parts (EVERYTHING BUT DOXYGEN)
    [YES] Understand new regular expression language
    [NO ] implement the EXPORTING of attributes, raw adds, raw deletes, and base name
    [NO ] Output Export Stats (maybe flag also?)
    [NO ] fix the header and cpp generation for where namespaces are(needs refactored)
    [NO ] Output_Stats(function bases/synonyms) --> into stats folder
    [NO ] Have compacts evalueate compacts
    
Code_Base
    [NO ] export project and create html (seperate little program to do this)
    

    
Optimizer Object:
    [NO ] optimize away headers in source_hpps and header_hpps (probably by removing and attempting to re-compile..
   

Flags:
hmm.. think about macro case that uses spaces?
  [YES] --cases arg
  [YES] --no_export
  [YES] --no_scan  
  [YES] --warn_amount arg   
  [NO ] --no_static   
  [NO ] --no_dynamic  
  [NO ] --no_documentation  
  [NO ] --no_windows      
  [NO ] --no_linux
  [YES ] --inclusion_gaurds
  [YES ] --no_cpp11 (as far as function decleration and definition syntax using auto)
  [YES] -h
  [YES] -v
 
Other:
    [NO ] change int numbers to unbounded int AKA GMP
    [NO ] Don't re-export files that haven't been changed.  Won't this mess up unique markers (inclusion gaurds and pragma once marker)?

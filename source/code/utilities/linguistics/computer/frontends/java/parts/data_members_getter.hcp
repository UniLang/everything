class

❪fstream❫
❪iostream❫
❪"code/utilities/contributor/contributor"❫
❪"code/utilities/code/concept_static_tree_structs"❫
❪"code/utilities/linguistics/computer/frontends/java/settings/java_settings"❫

⚯
❪"code/utilities/comments/doxygen/maker/doxygen_block_printer"❫
❪"code/utilities/linguistics/computer/keywords/visibility/visibility_keyword_getter"❫
❪"code/utilities/linguistics/computer/keywords/storage/storage_keyword_getter"❫
❪"code/utilities/code/query/data_member_visibility"❫
❪"code/utilities/code/query/data_member_storage_specifier"❫
⚞⚟

◀public: static▶ std::string ☀Get(model::Module const& structure, std::vector<Contributor> const& contributors, Java_Settings const& settings)❰
    std::string x;
    
    
    for (auto const& it: structure.data_member){
         x += Doxygen_Block_Printer::Get_Indented_Block(it,settings.module,4);
        x += "\n";
        x += "    ";
        x += Get_Visibility_Specifiers(it);
        x += " ";
        x += Posibily_Get_Static_Specifier(it);
        x += " ";
    //     x += Posibily_Get_Final_Specifier(structure.data_members.data_members[i]);
    //     x += Get_Real_Type(structure.data_members.data_members[i]);
    //     x += Type_Specialize_Getter::Get(structure.data_members.data_members[i].type_specializations);
    //     x += " ";
    //     x += Identifier_Name_Deriver::Derive_Name(structure.data_members.data_members[i],bad_temp,false,true);
    //     x += Default_Initialize_Getter::Possibly_Get_Default_Value(structure.data_members.data_members[i],Source_Language::JAVA);
    //     x += ";\n\n";

    }
    
    return x;
❱


◀public: static▶ std::string ☀Get_Real_Type(model::DataMember const& mem)❰
    //auto type       = as_string(mem.type.value);
    //auto real_type = Unilang_Type_To_Language_Type_Converter::Convert_To_Language_Type(type, Source_Language::JAVA).name;
    
    std::string real_type;
    return real_type;
❱
◀public: static▶ std::string ☀Get_Visibility_Specifiers(model::DataMember const& mem)❰

    auto access = Data_Member_Visibility::Get(mem);
    return Visibility_Keyword_Getter::Get(access,Source_Language::JAVA);
❱

◀public: static▶ std::string ☀Posibily_Get_Final_Specifier(model::DataMember const& mem)❰

    // if (mem.is_const){
    //     return "final ";
    // }
    return "";
❱
◀public: static▶ std::string ☀Posibily_Get_Static_Specifier(model::DataMember const& mem)❰
    auto storage = Data_Member_Storage_Specifier::Get(mem);
    return Storage_Keyword_Getter::Get(storage,Source_Language::JAVA);
❱
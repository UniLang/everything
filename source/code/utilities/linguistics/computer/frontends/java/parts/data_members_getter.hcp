class

❪fstream❫
❪iostream❫
❪"code/utilities/contributor/contributor"❫
❪"code/utilities/code/concept_static_tree_structs"❫
❪"code/utilities/linguistics/computer/frontends/java/settings/java_settings"❫

⚯
❪"code/utilities/comments/doxygen/maker/doxygen_block_printer"❫
❪"code/utilities/linguistics/computer/keywords/visibility/visibility_keyword_getter"❫
❪"code/utilities/linguistics/computer/keywords/storage/storage_keyword_getter"❫
❪"code/utilities/linguistics/computer/keywords/mutability/mutability_keyword_getter"❫
❪"code/utilities/code/query/data_member_mutability"❫
❪"code/utilities/code/query/data_member_visibility"❫
❪"code/utilities/code/query/data_member_storage_specifier"❫
❪"code/utilities/types/vectors/observers/lib"❫
❪"code/utilities/types/vectors/operators/lib"❫
❪"code/utilities/types/vectors/converters/lib"❫
❪"code/utilities/linguistics/computer/types/generic/unilang_type_to_language_type_converter"❫
⚞⚟

◀public: static▶ std::string ☀Get(model::Module const& structure, std::vector<Contributor> const& contributors, Java_Settings const& settings)❰
    std::string x;
    
    
    for (auto const& it: structure.data_member){
         x += Doxygen_Block_Printer::Get_Indented_Block(it,settings.module,4);
        x += "\n";
        x += "    ";
        x += Get_Visibility_Specifiers(it);
        x += " ";
        x += Posibily_Get_Static_Specifier(it);
        x += " ";
        x += Posibily_Get_Final_Specifier(it);
        x += " ";
        x += Get_Real_Type(it);
        x += Get_Type_Specializations(it);
        x += " ";
    //     x += Identifier_Name_Deriver::Derive_Name(structure.data_members.data_members[i],bad_temp,false,true);
    //     x += Default_Initialize_Getter::Possibly_Get_Default_Value(structure.data_members.data_members[i],Source_Language::JAVA);
        x += ";\n\n";

    }
    
    return x;
❱
◀public: static▶ std::string ☀Get_Type_Specializations(model::DataMember const& mem)❰
    return "";
❱

◀public: static▶ std::string ☀Get_Real_Type(model::DataMember const& mem)❰
    auto type       = First_Element_Or_Default(mem.data_member_type).value;
    auto real_type = Unilang_Type_To_Language_Type_Converter::Convert_To_Language_Type(type, Source_Language::JAVA).name;
    return real_type;
❱
◀public: static▶ std::string ☀Get_Visibility_Specifiers(model::DataMember const& mem)❰
    auto x = Data_Member_Visibility::Get(mem);
    return Visibility_Keyword_Getter::Get(x,Source_Language::JAVA);
❱
◀public: static▶ std::string ☀Posibily_Get_Final_Specifier(model::DataMember const& mem)❰
    auto x = Data_Member_Mutability::Get(mem);
    return Mutability_Keyword_Getter::Get(x,Source_Language::JAVA);
❱
◀public: static▶ std::string ☀Posibily_Get_Static_Specifier(model::DataMember const& mem)❰
    auto x = Data_Member_Storage_Specifier::Get(mem);
    return Storage_Keyword_Getter::Get(x,Source_Language::JAVA);
❱
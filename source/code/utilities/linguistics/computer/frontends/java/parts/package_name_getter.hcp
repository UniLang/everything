class
❪fstream❫
❪iostream❫
❪"code/utilities/code/concept_static_tree_structs"❫
❪"code/utilities/contributor/contributor"❫
❪"code/utilities/linguistics/computer/frontends/java/settings/java_settings"❫
❪"code/utilities/linguistics/computer/export_file_settings/export_file_settings"❫
❪"code/utilities/types/vectors/observers/lib"❫
❪"code/utilities/types/vectors/operators/lib"❫
❪"code/utilities/types/vectors/converters/lib"❫
❪"code/utilities/types/strings/observers/converting/lib"❫
⚯
⚞⚟

◀public: static▶ std::string ☀Get(model::Module const& structure, std::vector<Contributor> const& contributors, Java_Settings const& settings)❰

    //convert the name spaces into package names
    std::vector<std::string> packages;
    for (auto const& it: structure.namespace_){
        for (auto const& part: it.name){
            packages.emplace_back(part.value);
        }
    }
    
    //print the package command assuming one was derived
    if (!packages.empty()){
        
        //put into java format
        std::string text;
        text += "package ";
        text += Get_As_String_With_Dot_In_Between_Each_Element(packages);
        text += ";\n";
        return text;
    }
    
    return "";
    
❱
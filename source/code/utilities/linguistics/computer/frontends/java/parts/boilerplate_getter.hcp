class
❪fstream❫
❪iostream❫
❪"code/utilities/code/concept_static_tree_structs"❫
❪"code/utilities/contributor/contributor"❫
❪"code/utilities/linguistics/computer/frontends/java/settings/java_settings"❫
❪"code/utilities/linguistics/computer/export_file_settings/export_file_settings"❫
❪"code/utilities/types/vectors/observers/lib"❫
❪"code/utilities/linguistics/computer/filename/file_name_getter"❫
⚯
❪"code/utilities/linguistics/computer/frontends/parts/meta/impl/meta_block_printer"❫
❪"code/utilities/linguistics/computer/frontends/parts/meta/boilerplate_printer"❫
⚞⚟

◀public: static▶ std::string ☀Get(model::Module const& structure, std::vector<Contributor> const& contributors, Java_Settings const& settings)❰

    std::string text;
    
    Export_File_Settings file_settings;
    file_settings.language = Source_Language::JAVA;
    file_settings.code = Code_Type::GLOBAL;
    file_settings.special = Special_File_Type::NORMAL;
    file_settings.file = File_Type::DATA;
    
    auto name = First_Element_Or_Default(structure.name).value;
    auto final_file_name = File_Name_Getter::Get(file_settings,name,settings.module.general.filesystem.filesystem_naming);
    text += Boilerplate_Printer::Get_Top_Comment(structure,file_settings,settings.module.portion.meta,final_file_name);
    
    return text;
❱
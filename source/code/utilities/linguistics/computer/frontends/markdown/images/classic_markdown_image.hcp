class
❪fstream❫
❪iostream❫
❪"code/utilities/contributor/contributor"❫
❪"code/utilities/linguistics/computer/frontends/markdown/settings/markdown_settings"❫
❪"code/utilities/code/concept_static_tree_structs"❫
⚯
❪"code/utilities/types/strings/transformers/appending/lib"❫
❪"code/utilities/types/converters/lib"❫
❪"code/utilities/types/strings/observers/other/lib"❫
❪"code/utilities/types/vectors/observers/lib"❫
❪"code/utilities/types/vectors/operators/lib"❫
❪"code/utilities/types/char/lib"❫
❪"code/utilities/types/strings/observers/converting/lib"❫
⚞⚟

◀public: static▶ std::string ☀Get(model::Image const& i, Markdown_Settings const& settings)❰
    std::string text;
    
    //Append_With_Newline(text,"<p align=\"center\">");
    
    //Append_With_Newline(text,"<center>");
    //Append_With_Newline(text,"\\begin{center}");
    
    //Append_With_Newline(text,"<div style=\"float:center\">");
    
    //Append_With_Newline(text,"<div style=\"text-align:right; display-inline:block\">");
    
    Append_With_Newline(text,"<div>");
    
//     text-align:right;
// display-inline:block;
    
    
    Append(text,settings.image.alternative_text_start_marker);
    
    for (auto const& it: i.alternative_text){Append(text,it.value);}
    Append(text,settings.image.alternative_text_end_marker);
    Append(text,settings.image.image_path_start_marker);
    for (auto const& it: i.path){Append(text,it.value);}
    Append_A_Space(text);
    Append(text,settings.image.hover_text_start_marker);
    for (auto const& it: i.hover_text){Append(text,it.value);}
    Append(text,settings.image.hover_text_end_marker);
    Append(text,settings.image.image_path_end_marker);
    
    if (!Image_Has_No_Specified_Dimensions(i)){
        Append(text,"{ ");
        Append(text,"width=\"");
        for (auto const& width: i.width){
            Append(text,width.value);
        }
        Append(text,"\" ");
        Append(text,"height=\"");
        for (auto const& height: i.height){
            Append(text,height.value);
        }
        Append(text,"\"");
        Append(text," .center }");
    }
    
    Append_A_Newline(text);
    //Append_With_Newline(text,"</p>");
    //Append_With_Newline(text,"</center>");
    //Append_With_Newline(text,"\\end{center}");
    
    Append_With_Newline(text,"</div>");
    
    
    Append_A_Newline(text);
    Append_A_Newline(text);
    return text;
❱

◀private: static▶ bool ☀Image_Has_No_Specified_Dimensions(model::Image const& image)❰
    return image.width.empty() && image.height.empty();
❱
class
❪string❫
❪iostream❫
❪cstdlib❫
❪iostream❫
❪"code/utilities/linguistics/cooperative_principle/grice_cooperative_principle_maxim"❫
❪"code/utilities/linguistics/cooperative_principle/grice_statement"❫
⚯

⚞⚟


◀public: static▶ bool ☀Check(Grice_Statement const& statement) ❰
    
    if (statement.quality.action == Grice_Cooperative_Principle_Maxim_Actions::FLOUT){
        return false;
    }
    if (statement.quality.action == Grice_Cooperative_Principle_Maxim_Actions::VIOLATE){
        return false;
    }
    if (statement.quality.action == Grice_Cooperative_Principle_Maxim_Actions::OPT_OUT){
        return false;
    }
    
    if (statement.quantity.action == Grice_Cooperative_Principle_Maxim_Actions::FLOUT){
        return false;
    }
    if (statement.quantity.action == Grice_Cooperative_Principle_Maxim_Actions::VIOLATE){
        return false;
    }
    if (statement.quantity.action == Grice_Cooperative_Principle_Maxim_Actions::OPT_OUT){
        return false;
    }
    
    if (statement.manner.action == Grice_Cooperative_Principle_Maxim_Actions::FLOUT){
        return false;
    }
    if (statement.manner.action == Grice_Cooperative_Principle_Maxim_Actions::VIOLATE){
        return false;
    }
    if (statement.manner.action == Grice_Cooperative_Principle_Maxim_Actions::OPT_OUT){
        return false;
    }
    
    if (statement.relevance.action == Grice_Cooperative_Principle_Maxim_Actions::FLOUT){
        return false;
    }
    if (statement.relevance.action == Grice_Cooperative_Principle_Maxim_Actions::VIOLATE){
        return false;
    }
    if (statement.relevance.action == Grice_Cooperative_Principle_Maxim_Actions::OPT_OUT){
        return false;
    }
    
    return true;
❱
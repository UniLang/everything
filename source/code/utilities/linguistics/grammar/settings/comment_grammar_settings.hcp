class
❪vector❫
❪string❫
❪unordered_map❫
❪"code/utilities/comments/doxygen/settings/doxygen_block_options"❫
❪"code/utilities/linguistics/grammar/settings/comment_grammar_spellcheck_settings"❫
❪"code/utilities/linguistics/grammar/settings/comment_grammar_puncuation_settings"❫
❪"code/utilities/linguistics/grammar/settings/comment_grammar_preposition_settings"❫
❪"code/utilities/linguistics/grammar/settings/comment_grammar_cliche_settings"❫
❪"code/utilities/linguistics/grammar/settings/comment_grammar_bad_word_settings"❫
⚯

⚞⚟

◀
public:
     
   //grammar settings on exported comment
   Comment_Grammar_Spellcheck_Settings spellcheck;
   Comment_Grammar_Puncuation_Settings puncuation;
   Comment_Grammar_Preposition_Settings prepositions;
   Comment_Grammar_Cliche_Settings cliches;
   Comment_Grammar_Bad_Word_Settings bad_words;
   
   //basically a spell check of common things we've seen ourselves do
   bool use_auto_corrects=true;
   bool warn_about_auto_corrects=true;
   std::unordered_map<std::string, std::string> auto_corrects{
   	{"teh","the"},
   	{"wensday","wednesday"}
   };
   
   //"that's a valid word, but did you actually mean to write..."
   bool fix_correctly_spelled_typo=true;
   bool warn_correctly_spelled_typo=true;
   std::unordered_map<std::string, std::string> correctly_spelled_mistypes{
      {"manly","mainly"},
   };
   
   //these are words that are correct but people prefer that they are
   //written differently
   bool auto_retaste_words=true;
   bool warn_about_taste_suggestion=true;
   std::unordered_map<std::string, std::string> taste_corrections{
      {"vertexes","vertices"},
      {"indexes","indices"},
   };
   
   bool auto_capitalize_certain_words = true;
   bool warn_about_uncapitalized_words = true;
   std::vector<std::string> capitalize_words{
      "pennsylvania",
      "monday",
      "tuesday",
      "wednesday",
      "thursday",
      "friday",
      "saturday",
      "sunday",
      //months...
      //states...
      //companies...
   };
   
   bool auto_full_caps_certain_words = true;
   std::vector<std::string> full_caps_words{
   "hidl",
   "cas",
   "ac",
   };
   
   
▶

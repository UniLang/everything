class
❪string❫
❪unordered_map❫
❪utility❫
❪cstdlib❫
❪"code/utilities/fonts/bdf/settings/character_segment"❫
❪"code/utilities/data_structures/graphics/objects/label/data/label_settings"❫
❪"code/utilities/data_structures/graphics/objects/buttoned_faced_label/data/positioned_buttoned_faced_label"❫
❪"code/utilities/data_structures/graphics/objects/buttoned_faced_tree/data/positioned_button_face_tree"❫
❪"code/utilities/data_structures/graphics/objects/buttoned_faced_tree/button_tree_label_drawer"❫
❪"code/utilities/data_structures/graphics/objects/buildable_faced_tree/data/buildable_face_tree"❫
❪"code/utilities/data_structures/graphics/objects/buildable_faced_tree/data/positioned_buildable_face_tree"❫
❪"code/utilities/data_structures/graphics/objects/buildable_faced_tree/buildable_label_action"❫
❪"code/utilities/data_structures/graphics/objects/label/label_drawer"❫
❪"code/utilities/data_structures/graphics/objects/frame_elements"❫
❪"code/utilities/types/vectors/operators/lib"❫
❪"code/utilities/data_structures/graphics/objects/faced_label/faced_label_drawer"❫
❪"code/utilities/peripheral/mouse/state/mouse_state"❫
❪"code/utilities/fonts/bdf/character_maps/character_maps"❫
❪"code/utilities/data_structures/counters/unique_max_counter/unique_max_counter"❫
❪"code/utilities/data_structures/graphics/objects/select_menu/select_menu"❫
⚯
❪"code/utilities/data_structures/graphics/objects/mouse/events/mouse_events_checker"❫
❪"code/utilities/types/vectors/operators/lib"❫
❪"code/utilities/types/vectors/observers/lib"❫
❪"code/utilities/data_structures/graphics/bitmap/premade/vertical_line"❫
❪"code/utilities/data_structures/graphics/bitmap/premade/horizontal_line"❫
❪"code/utilities/data_structures/graphics/bitmap/premade/l_line"❫
❪"code/utilities/data_structures/graphics/objects/faced_label/premade/faced_label_premades"❫
❪"code/utilities/data_structures/graphics/objects/faced_tree/tree_label_drawer"❫
❪"code/utilities/data_structures/graphics/objects/buttoned_faced_tree/button_face_tree_click_finder"❫
❪"code/utilities/data_structures/graphics/objects/faced_tree/tree_label_click_finder"❫
❪"code/utilities/data_structures/graphics/objects/buttoned_faced_label/premade/buttoned_faced_label_premades"❫
❪"code/utilities/data_structures/graphics/objects/buildable_faced_tree/buildable_face_tree_action_doer"❫
❪"code/utilities/data_structures/graphics/objects/buildable_faced_tree/generic_menu_handler"❫
❪"code/utilities/code/references/reference_lookup_map"❫
⚞⚟

◀public: static▶ Frame_Elements ☀Draw(Character_Maps const& font_chars, Buildable_Face_Tree_State & state, Position const& pos, Pc_Input_State const& pc_input)❰
    
    return Draw_Impl(font_chars,state,pos,pc_input);
❱

◀public: static▶ Frame_Elements ☀Draw(Character_Maps const& font_chars, Positioned_Buildable_Face_Tree & tree, Pc_Input_State const& pc_input)❰
    
    return Draw_Impl(font_chars,tree.state,tree.pos,pc_input);
❱

◀private: static▶ Frame_Elements ☀Draw_Impl(Character_Maps const& font_chars, Buildable_Face_Tree_State & state, Position const& pos, Pc_Input_State const& pc_input)❰
    
    Frame_Elements elements;
    
    //draw the tree
    Reference_Lookup_Map ref_map;
    elements.types += Button_Tree_Label_Drawer::Draw(font_chars,state.structure,pos,pc_input,ref_map).types;
    
    //find the element that has been right-clicked
    //TODO: Drawing the tree should return this information.
    bool label_first_selected = false;
    if (!state.menu.visible){
        state.selected_node = Button_Face_Tree_Click_Finder::Find_Clicked_Label(state.structure);
        if (state.selected_node != state.structure.nodes.end()){
            label_first_selected = true;
        }
    }
    
    //was an element clicked?
    //decide to show the action menu 
    Generic_Menu_Handler::Handle_Menu_Logic(elements,font_chars,pc_input,state,label_first_selected);
    
    
    return elements;
❱



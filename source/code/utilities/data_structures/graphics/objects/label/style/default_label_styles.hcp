class
❪string❫
❪unordered_map❫
❪"code/utilities/data_structures/graphics/bitmap/full_color_bitmap/full_color_bitmap"❫
❪"code/utilities/fonts/bdf/settings/character_segment"❫
❪"code/tools/ide/settings/ide_settings"❫
❪"code/utilities/data_structures/graphics/objects/label/data/label_settings"❫
❪"code/utilities/data_structures/graphics/objects/mouse/events/mouse_events_checker"❫
❪"code/utilities/graphics/imgui/render/elements/rectangle_drawer"❫
❪"code/utilities/graphics/imgui/render/elements/full_color_bitmap_drawer"❫
❪"code/utilities/data_structures/graphics/text/text_to_bitmap"❫
❪"code/utilities/graphics/imgui/ui_renders"❫
❪"code/utilities/data_structures/graphics/bitmap/pixel/pixel_slider"❫
❪"code/utilities/colors/defaults/rectangle_shades"❫
❪"code/utilities/data_structures/color/transparent_rgb_color"❫
❪"code/utilities/data_structures/graphics/objects/cursor/premade/color_cursor"❫
⚯
❪"code/utilities/colors/defaults/color_defaults"❫
❪"code/utilities/colors/transformers/color_shader"❫
❪"code/utilities/data_structures/graphics/objects/cursor/premade/blue_cursor"❫
❪"code/utilities/data_structures/graphics/objects/cursor/premade/red_cursor"❫
⚞⚟

◀public: static▶ Label_Styles ☀Blue()❰
    Label_Styles x = Two_Color_Style(Color_Defaults::Light_Blue(),Color_Defaults::Black(),Color_Defaults::Black(),
                                     Color_Defaults::Blue(),Color_Defaults::Black(),Color_Defaults::Black());
    return x;
❱
◀public: static▶ Label_Styles ☀Gray()❰

    auto light = Color_Defaults::Light_Gray();
    auto dark = Color_Defaults::Light_Gray();
    Color_Shader::Shade(dark,.5);
    
    Label_Styles x = Two_Color_Style(light,Color_Defaults::Black(),Color_Defaults::Black(),
                                     dark,Color_Defaults::Black(),Color_Defaults::Black());
    return x;
❱

◀public: static▶ Label_Styles ☀Two_Color_Style(Transparent_Rgb_Color const& fill, Transparent_Rgb_Color const& text, Transparent_Rgb_Color const& cursor,
                                             Transparent_Rgb_Color const& fill2, Transparent_Rgb_Color const& text2, Transparent_Rgb_Color const& cursor2)❰
    Label_Styles x;
    
    //not selected
    x.regular_nonactive = Plain_Color_Box_Style(fill,text,cursor);
    x.hovered_nonactive = Plain_Color_Box_Style(fill2,text2,cursor2);
    
    //selected
    x.regular_active = Plain_Color_Box_Style(fill2,text2,cursor2);
    x.hovered_active = Plain_Color_Box_Style(fill2,text2,cursor2);
    
    //DISABLED:
    //not selected
    x.regular_nonactive_disabled = Plain_Disabled_Box_Style();
    x.hovered_nonactive_disabled = Plain_Disabled_Box_Style();
    
    //selected
    x.regular_active_disabled = Plain_Disabled_Box_Style();
    x.hovered_active_disabled = Plain_Disabled_Box_Style();
    
    return x;
❱

◀public: static▶ Label_Styles ☀Plain_Text()❰
    Label_Styles x;
    
    //not selected
    x.regular_nonactive = Plain_Text_Style();
    x.hovered_nonactive = Plain_Text_Style();
    
    //selected
    x.regular_active = Plain_Text_Style();
    x.hovered_active = Plain_Text_Style();
    
    //DISABLED:
    //not selected
    x.regular_nonactive_disabled = Plain_Disabled_Box_Style();
    x.hovered_nonactive_disabled = Plain_Disabled_Box_Style();
    
    //selected
    x.regular_active_disabled = Plain_Disabled_Box_Style();
    x.hovered_active_disabled = Plain_Disabled_Box_Style();
    
    return x;
❱

◀public: static▶ Label_Styles ☀Plain_White_Box()❰
    Label_Styles x;
    
    //not selected
    x.regular_nonactive = Plain_White_Box_Style();
    x.hovered_nonactive = Plain_White_Box_Style();
    
    //selected
    x.regular_active = Plain_White_Box_Style();
    x.hovered_active = Plain_White_Box_Style();
    
    //DISABLED:
    //not selected
    x.regular_nonactive_disabled = Plain_Disabled_Box_Style();
    x.hovered_nonactive_disabled = Plain_Disabled_Box_Style();
    
    //selected
    x.regular_active_disabled = Plain_Disabled_Box_Style();
    x.hovered_active_disabled = Plain_Disabled_Box_Style();
    
    return x;
❱
◀public: static▶ Label_Styles ☀Plain_Gray_Box()❰
    Label_Styles x;
    
    //not selected
    x.regular_nonactive = Plain_Gray_Box_Style();
    x.hovered_nonactive = Plain_Gray_Box_Style();
    
    //selected
    x.regular_active = Plain_Gray_Box_Style();
    x.hovered_active = Plain_Gray_Box_Style();
    
    //DISABLED:
    //not selected
    x.regular_nonactive_disabled = Plain_Disabled_Box_Style();
    x.hovered_nonactive_disabled = Plain_Disabled_Box_Style();
    
    //selected
    x.regular_active_disabled = Plain_Disabled_Box_Style();
    x.hovered_active_disabled = Plain_Disabled_Box_Style();
    
    return x;
❱

◀public: static▶ Label_Styles ☀Highlightable_Plain_White_Box()❰
    Label_Styles x;
    
    //not selected
    x.regular_nonactive = Plain_White_Box_Style();
    x.hovered_nonactive = Plain_Black_Box_Style();
    
    //selected
    x.regular_active = Plain_Black_Box_Style();
    x.hovered_active = Plain_Black_Box_Style();
    
    //DISABLED:
    //not selected
    x.regular_nonactive_disabled = Plain_Disabled_Box_Style();
    x.hovered_nonactive_disabled = Plain_Disabled_Box_Style();
    
    //selected
    x.regular_active_disabled = Plain_Disabled_Box_Style();
    x.hovered_active_disabled = Plain_Disabled_Box_Style();
    
    return x;
❱

◀public: static▶ Label_Styles ☀Label_Style_Menu()❰
    Label_Styles x;
    
    //not selected
    x.regular_nonactive = Menu_Style_1();
    x.hovered_nonactive = Menu_Style_2();
    
    //selected
    x.regular_active = Menu_Style_3();
    x.hovered_active = Menu_Style_4();
    
    //DISABLED:
    //not selected
    x.regular_nonactive_disabled = Plain_Disabled_Box_Style();
    x.hovered_nonactive_disabled = Plain_Disabled_Box_Style();
    
    //selected
    x.regular_active_disabled = Plain_Disabled_Box_Style();
    x.hovered_active_disabled = Plain_Disabled_Box_Style();
    
    return x;
❱


◀public: static▶ Label_Styles ☀Label_Style_1()❰
    
    Label_Styles x;
    
    //not selected
    x.regular_nonactive = Orange_White_Slide_Regular();
    x.hovered_nonactive = Orange_White_Slide_Hovered();
    
    //selected
    x.regular_active = Orange_White_Slide_Regular_Active();
    x.hovered_active = Orange_White_Slide_Hovered_Active();
    
    //DISABLED:
    //not selected
    x.regular_nonactive_disabled = Plain_Disabled_Box_Style();
    x.hovered_nonactive_disabled = Plain_Disabled_Box_Style();
    
    //selected
    x.regular_active_disabled = Plain_Disabled_Box_Style();
    x.hovered_active_disabled = Plain_Disabled_Box_Style();
    
    return x;
❱

◀public: static▶ Label_Styles ☀Label_Style_Slide_Label()❰
    Label_Styles x;
    
    //not selected
    x.regular_nonactive = Slider_Style_1();
    x.hovered_nonactive = Slider_Style_2();
    
    //selected
    x.regular_active = Slider_Style_3();
    x.hovered_active = Slider_Style_4();
    
    //DISABLED:
    //not selected
    x.regular_nonactive_disabled = Plain_Disabled_Box_Style();
    x.hovered_nonactive_disabled = Plain_Disabled_Box_Style();
    
    //selected
    x.regular_active_disabled = Plain_Disabled_Box_Style();
    x.hovered_active_disabled = Plain_Disabled_Box_Style();
    
    return x;
❱











◀private: static▶ Label_Style ☀Plain_Color_Box_Style(Transparent_Rgb_Color const& fill, Transparent_Rgb_Color const& text, Transparent_Rgb_Color const& cursor)❰

    Label_Style x;
    x.box.edge.thickness = 1;
    x.box.edge.rounding  = 0.0;
    x.box.colors.border = Color_Defaults::Black();
    x.box.colors.fill = fill;
    x.text = text;
    x.width.grow_width = true;
    x.width.fixed_width = 100;
    x.width.pixel_slide = Create_Normal_Pixel_Slider();
    x.box.shades = Rectangle_Shades::Orange_White_Fade();
    x.box.hooks.draw_fill = true;
    x.box.hooks.draw_shade = false;
    x.box.hooks.draw_border = true;
    x.cursor_style = Color_Cursor::Get(cursor);
    return x;
❱
◀private: static▶ Label_Style ☀Plain_Text_Style()❰

    Label_Style x;
    x.box.edge.thickness = 0;
    x.box.edge.rounding  = 0.0;
    x.box.colors.border = Color_Defaults::Black();
    x.box.colors.fill = Color_Defaults::White();
    x.text = Color_Defaults::Black();
    x.width.grow_width = true;
    x.width.fixed_width = 100;
    x.width.pixel_slide = Create_Normal_Pixel_Slider();
    x.box.shades = Rectangle_Shades::Orange_White_Fade();
    x.box.hooks.draw_fill = false;
    x.box.hooks.draw_shade = false;
    x.box.hooks.draw_border = false;
    x.cursor_style = Blue_Cursor::Get();
    return x;
❱

◀private: static▶ Label_Style ☀Plain_White_Box_Style()❰

    Label_Style x;
    x.box.edge.thickness = 1;
    x.box.edge.rounding  = 0.0;
    x.box.colors.border = Color_Defaults::Black();
    x.box.colors.fill = Color_Defaults::White();
    x.text = Color_Defaults::Black();
    x.width.grow_width = true;
    x.width.fixed_width = 100;
    x.width.pixel_slide = Create_Normal_Pixel_Slider();
    x.box.shades = Rectangle_Shades::Orange_White_Fade();
    x.box.hooks.draw_fill = true;
    x.box.hooks.draw_shade = false;
    x.box.hooks.draw_border = true;
    x.cursor_style = Blue_Cursor::Get();
    return x;
❱

◀private: static▶ Label_Style ☀Plain_Disabled_Box_Style()❰

    Label_Style x;
    x.box.edge.thickness = 1;
    x.box.edge.rounding  = 0.0;
    x.box.colors.border = Color_Defaults::Black();
    x.box.colors.fill = Color_Defaults::Faded_Maroon();
    x.text = Color_Defaults::Dark_Gray();
    x.width.grow_width = true;
    x.width.fixed_width = 100;
    x.width.pixel_slide = Create_Normal_Pixel_Slider();
    x.box.shades = Rectangle_Shades::Orange_White_Fade();
    x.box.hooks.draw_fill = true;
    x.box.hooks.draw_shade = false;
    x.box.hooks.draw_border = true;
    x.cursor_style = Blue_Cursor::Get();
    return x;
❱

◀private: static▶ Label_Style ☀Plain_Black_Box_Style()❰

    Label_Style x;
    x.box.edge.thickness = 1;
    x.box.edge.rounding  = 0.0;
    x.box.colors.border = Color_Defaults::Black();
    x.box.colors.fill = Color_Defaults::Black();
    x.text = Color_Defaults::White();
    x.width.grow_width = true;
    x.width.fixed_width = 100;
    x.width.pixel_slide = Create_Normal_Pixel_Slider();
    x.box.shades = Rectangle_Shades::Orange_White_Fade();
    x.box.hooks.draw_fill = true;
    x.box.hooks.draw_shade = false;
    x.box.hooks.draw_border = true;
    x.cursor_style = Blue_Cursor::Get();
    return x;
❱

◀private: static▶ Label_Style ☀Plain_Gray_Box_Style()❰

    Label_Style x;
    x.box.edge.thickness = 1;
    x.box.edge.rounding  = 0.0;
    x.box.colors.border = Color_Defaults::Black();
    x.box.colors.fill = Color_Defaults::Gray();
    x.text = Color_Defaults::Black();
    x.width.grow_width = true;
    x.width.fixed_width = 100;
    x.width.pixel_slide = Create_Normal_Pixel_Slider();
    x.box.shades = Rectangle_Shades::Orange_White_Fade();
    x.box.hooks.draw_fill = true;
    x.box.hooks.draw_shade = false;
    x.box.hooks.draw_border = true;
    x.cursor_style = Blue_Cursor::Get();
    return x;
❱

◀private: static▶ Label_Style ☀Menu_Style_1()❰

    Label_Style x;
    
    x.box.edge.thickness = 1;
    x.box.edge.rounding  = 0.0;
    x.box.colors.border = Color_Defaults::Black();
    x.box.colors.fill = Color_Defaults::White();
    x.text = Color_Defaults::Black();
    x.width.grow_width = true;
    x.width.fixed_width = 100;
    x.width.pixel_slide = Create_Normal_Pixel_Slider();
    x.box.shades = Rectangle_Shades::Orange_White_Fade();
    x.box.hooks.draw_fill = true;
    x.box.hooks.draw_shade = false;
    x.box.hooks.draw_border = true;
    x.cursor_style = Blue_Cursor::Get();
    return x;
❱
◀private: static▶ Label_Style ☀Menu_Style_2()❰

    Label_Style x;
    
    x.box.edge.thickness = 1;
    x.box.edge.rounding  = 0.0;
    x.box.colors.border = Color_Defaults::Black();
    x.box.colors.fill = Color_Defaults::Black();
    x.text = Color_Defaults::White();
    x.width.grow_width = true;
    x.width.fixed_width = 100;
    x.width.pixel_slide = Create_Normal_Pixel_Slider();
    x.box.shades = Rectangle_Shades::Orange_White_Fade();
    x.box.hooks.draw_fill = true;
    x.box.hooks.draw_shade = false;
    x.box.hooks.draw_border = true;
    x.cursor_style = Blue_Cursor::Get();
    return x;
❱
◀private: static▶ Label_Style ☀Menu_Style_3()❰

    Label_Style x;
    
    x.box.edge.thickness = 1;
    x.box.edge.rounding  = 0.0;
    x.box.colors.border = Color_Defaults::Red();
    x.box.colors.fill = Color_Defaults::Black();
    x.text = Color_Defaults::White();
    x.width.grow_width = true;
    x.width.fixed_width = 100;
    x.width.pixel_slide = Create_Normal_Pixel_Slider();
    x.box.shades = Rectangle_Shades::Orange_White_Fade();
    x.box.hooks.draw_fill = true;
    x.box.hooks.draw_shade = false;
    x.box.hooks.draw_border = true;
    x.cursor_style = Blue_Cursor::Get();
    return x;
❱
◀private: static▶ Label_Style ☀Menu_Style_4()❰

    Label_Style x;
    
    x.box.edge.thickness = 1;
    x.box.edge.rounding  = 0.0;
    x.box.colors.border = Color_Defaults::Red();
    x.box.colors.fill = Color_Defaults::Black();
    x.text = Color_Defaults::White();
    x.width.grow_width = true;
    x.width.fixed_width = 100;
    x.width.pixel_slide = Create_Normal_Pixel_Slider();
    x.box.shades = Rectangle_Shades::Orange_White_Fade();
    x.box.hooks.draw_fill = true;
    x.box.hooks.draw_shade = false;
    x.box.hooks.draw_border = true;
    x.cursor_style = Blue_Cursor::Get();
    return x;
❱


◀private: static▶ Label_Style ☀Slider_Style_1()❰

    Label_Style x;
    
    x.box.edge.thickness = 1;
    x.box.edge.rounding  = 0.0;
    x.box.colors.border = Color_Defaults::Black();
    x.box.colors.fill = Color_Defaults::White();
    x.text = Color_Defaults::Black();
    x.width.grow_width = true;
    x.width.fixed_width = 20;
    x.width.pixel_slide = Create_Normal_Pixel_Slider();
    x.box.shades = Rectangle_Shades::Orange_White_Fade();
    x.box.hooks.draw_fill = true;
    x.box.hooks.draw_shade = false;
    x.box.hooks.draw_border = true;
    x.cursor_style = Blue_Cursor::Get();
    return x;
❱
◀private: static▶ Label_Style ☀Slider_Style_2()❰

    Label_Style x;
    
    x.box.edge.thickness = 1;
    x.box.edge.rounding  = 0.0;
    x.box.colors.border = Color_Defaults::Black();
    x.box.colors.fill = Color_Defaults::Black();
    x.text = Color_Defaults::White();
    x.width.grow_width = true;
    x.width.fixed_width = 20;
    x.width.pixel_slide = Create_Normal_Pixel_Slider();
    x.box.shades = Rectangle_Shades::Orange_White_Fade();
    x.box.hooks.draw_fill = true;
    x.box.hooks.draw_shade = false;
    x.box.hooks.draw_border = true;
    x.cursor_style = Blue_Cursor::Get();
    return x;
❱
◀private: static▶ Label_Style ☀Slider_Style_3()❰

    Label_Style x;
    
    x.box.edge.thickness = 1;
    x.box.edge.rounding  = 0.0;
    x.box.colors.border = Color_Defaults::Red();
    x.box.colors.fill = Color_Defaults::Black();
    x.text = Color_Defaults::White();
    x.width.grow_width = true;
    x.width.fixed_width = 20;
    x.width.pixel_slide = Create_Normal_Pixel_Slider();
    x.box.shades = Rectangle_Shades::Orange_White_Fade();
    x.box.hooks.draw_fill = true;
    x.box.hooks.draw_shade = false;
    x.box.hooks.draw_border = true;
    x.cursor_style = Blue_Cursor::Get();
    return x;
❱
◀private: static▶ Label_Style ☀Slider_Style_4()❰

    Label_Style x;
    
    x.box.edge.thickness = 1;
    x.box.edge.rounding  = 0.0;
    x.box.colors.border = Color_Defaults::Red();
    x.box.colors.fill = Color_Defaults::Black();
    x.text = Color_Defaults::White();
    x.width.grow_width = true;
    x.width.fixed_width = 20;
    x.width.pixel_slide = Create_Normal_Pixel_Slider();
    x.box.shades = Rectangle_Shades::Orange_White_Fade();
    x.box.hooks.draw_fill = true;
    x.box.hooks.draw_shade = false;
    x.box.hooks.draw_border = true;
    x.cursor_style = Blue_Cursor::Get();
    return x;
❱

◀private: static▶ Label_Style ☀Orange_White_Slide_Regular()❰

    Label_Style x;
    
    x.box.edge.thickness = 1;
    x.box.edge.rounding  = 0.0;
    x.box.colors.border = Color_Defaults::Black();
    x.box.colors.fill = Color_Defaults::White();
    x.text = Color_Defaults::Black();
    x.width.grow_width = false;
    x.width.fixed_width = 100;
    x.width.pixel_slide = Create_Normal_Pixel_Slider();
    x.box.shades = Rectangle_Shades::Orange_White_Fade();
    x.box.hooks.draw_fill = true;
    x.box.hooks.draw_shade = true;
    x.box.hooks.draw_border = true;
    x.cursor_style = Blue_Cursor::Get();
    return x;
❱
◀private: static▶ Label_Style ☀Orange_White_Slide_Hovered()❰

    Label_Style x;
    
    x.box.edge.thickness = 1;
    x.box.edge.rounding  = 0.0;
    x.box.colors.border = Color_Defaults::Black();
    x.box.colors.fill = Color_Defaults::Black();
    x.text = Color_Defaults::White();
    x.width.grow_width = false;
    x.width.fixed_width = 100;
    x.width.pixel_slide = Create_Normal_Pixel_Slider();
    x.box.shades = Rectangle_Shades::Orange_White_Fade();
    x.box.hooks.draw_fill = true;
    x.box.hooks.draw_shade = true;
    x.box.hooks.draw_border = true;
    x.cursor_style = Blue_Cursor::Get();
    return x;
❱

◀private: static▶ Label_Style ☀Orange_White_Slide_Regular_Active()❰

    Label_Style x;
    
    x.box.edge.thickness = 1;
    x.box.edge.rounding  = 0.0;
    x.box.colors.border = Color_Defaults::Red();
    x.box.colors.fill = Color_Defaults::White();
    x.text = Color_Defaults::Black();
    x.width.grow_width = true;
    x.width.fixed_width = 100;
    x.width.pixel_slide = Create_Normal_Pixel_Slider();
    x.box.shades = Rectangle_Shades::Orange_White_Fade();
    x.box.hooks.draw_fill = true;
    x.box.hooks.draw_shade = true;
    x.box.hooks.draw_border = true;
    x.cursor_style = Blue_Cursor::Get();
    return x;
❱
◀private: static▶ Label_Style ☀Orange_White_Slide_Hovered_Active()❰

    Label_Style x;
    
    x.box.edge.thickness = 1;
    x.box.edge.rounding  = 0.0;
    x.box.colors.border = Color_Defaults::Red();
    x.box.colors.fill = Color_Defaults::Black();
    x.text = Color_Defaults::White();
    x.width.grow_width = true;
    x.width.fixed_width = 100;
    x.width.pixel_slide = Create_Normal_Pixel_Slider();
    x.box.shades = Rectangle_Shades::Orange_White_Fade();
    x.box.hooks.draw_fill = true;
    x.box.hooks.draw_shade = true;
    x.box.hooks.draw_border = true;
    x.cursor_style = Blue_Cursor::Get();
    return x;
❱






◀private: static▶ Pixel_Slider ☀Create_Normal_Pixel_Slider()❰
    Pixel_Slider slider;
    slider.cycle_offset = 0;
    slider.cycle_offset_pixel_jump = 1;
    slider.slide_clock.rate = .04;
    return slider;
❱
class
❪string❫
❪unordered_map❫
❪"code/utilities/data_structures/graphics/gui_desktop/gui_desktop"❫
⚯
❪"code/utilities/graphics/sdl/standard_sdl_init_settings"❫
❪"code/utilities/execution/thread_pool_getter"❫
❪"code/utilities/graphics/imgui/background/background_settings_getter"❫
❪"code/utilities/fonts/bdf/complete/unilang/unilang_character_maps"❫
❪"code/utilities/data_structures/graphics/objects/mouse/premade/standard_mouse"❫
⚞⚟

◀public: static▶ Gui_Desktop ☀Get()❰

    //SDL and Imgui related init settings
    Gui_Desktop x;
    x.init = Standard_Sdl_Init_Settings::Get("Unilang IDE");
    
    x.thread_pool = Thread_Pool_Getter::Get_Max();
    
    x.background = Background_Settings_Getter::Get();
    
    //font related settings
    x.unilang_font_lookup = Unilang_Character_Maps::Get();
    
    //mouse
    x.mouse.mouse = Standard_Mouse::Get();
    
    //make the input is cleared out.
    //int len = sizeof(x.input.keyboard.key_states)/sizeof(x.input.keyboard.key_states[0]);
    for (size_t i = 0; i < x.input.keyboard.key_states.size(); ++i){
        x.input.keyboard.key_states[i] = Key_State::NONE;
        x.previous_input.keyboard.key_states[i] = Key_State::NONE;
    }
    
    return x;
❱
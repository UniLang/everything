class
❪"code/utilities/graphics/x11/data/main_x11_state"❫
❪"code/utilities/graphics/glx/x11_to_opengl_bind_settings"❫
❪GL/gl.h❫
❪GL/glx.h❫
⚯
⚞⚟

//Logic for creating a Visual
◀public: static▶ XVisualInfo* ☀Create_Visual(Main_X11_State & x11, GLXFBConfig *fbc, X11_To_Opengl_Bind_Settings const& settings)❰
    if (settings.visual_impl == 1){return Create_Visual_Impl1(x11,fbc);}
    else if (settings.visual_impl == 2){return Create_Visual_Impl2(x11);}
    return Create_Visual_Impl2(x11);
❱

◀private: static▶ XVisualInfo* ☀Create_Visual_Impl1(Main_X11_State & x11, GLXFBConfig *fbc)❰
        XVisualInfo *vi = glXGetVisualFromFBConfig(x11.d, fbc[0]);
        return vi;
❱

◀private: static▶ XVisualInfo* ☀Create_Visual_Impl2(Main_X11_State & x11)❰

    int  sngBuf[] = {    GLX_RGBA,
                    GLX_RED_SIZE, 1,
                    GLX_GREEN_SIZE, 1,
                    GLX_BLUE_SIZE, 1,
                    GLX_DEPTH_SIZE, 12,
                    None };

    int  dblBuf[] = {    GLX_RGBA,
                    GLX_RED_SIZE, 1,
                    GLX_GREEN_SIZE, 1,
                    GLX_BLUE_SIZE, 1,
                    GLX_DEPTH_SIZE, 12,
                    GLX_DOUBLEBUFFER,
                    None };
   
  XVisualInfo* vi;
  if(!(vi = glXChooseVisual(x11.d, DefaultScreen(x11.d), dblBuf))) {
    if(!(vi = glXChooseVisual(x11.d, DefaultScreen(x11.d), sngBuf))){
        std::cerr << "no RGB visual with depth buffer" << std::endl;
        exit(-1);
    }
  }
  return vi;
  
❱
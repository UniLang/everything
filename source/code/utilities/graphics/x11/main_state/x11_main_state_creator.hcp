class
❪string❫
❪cstdlib❫
❪iostream❫
❪X11/extensions/shape.h❫
❪"code/utilities/graphics/x11/main_state/setup_display_settings"❫
❪"code/utilities/graphics/x11/main_state/x11_display_getter"❫
❪"code/utilities/graphics/x11/main_state/x11_color_getter"❫
❪"code/utilities/graphics/x11/data/main_x11_state"❫
❪"code/utilities/graphics/x11/data/x11_window_geometry"❫
❪"code/utilities/graphics/x11/data/x11_bg_fg_colors"❫
⚯
⚞⚟

◀public: static▶ Main_X11_State ☀Create(Setup_Display_Settings const& settings)❰
    Main_X11_State state;
      
    //create the main display
    state.d = X11_Display_Getter::Get(settings);
    
    //create the screen and depth
    state.screen = DefaultScreen(state.d);
    state.depth = DefaultDepth(state.d, state.screen);
    
    //create the root window
    Build_Window(state,settings);
    state.root_geo = get_geometry(state.d, state.root);
    
    //colors
    state.colors = X11_Color_Getter::Get(state.d, state.screen, state.depth);
    
    return state;
❱

◀public: static▶ void ☀Build_Window(Main_X11_State & state, Setup_Display_Settings const& settings)❰

    //If you're making a screensaver (say with xscreensaver),
    //you don't want a window that will be seen normally when the program runs.
    //You want to draw to the virtual root window
    if (settings.window.use_root){
        state.root = RootWindow(state.d, state.screen);
        return;
    }
    
    //build a window you can actually see
    Build_Simple_Window(state,settings);
❱

◀public: static▶ void ☀Build_Simple_Window(Main_X11_State & state, Setup_Display_Settings const& settings)❰

    auto border = BlackPixel(state.d, state.screen);
    auto background = WhitePixel(state.d, state.screen);

    //If you do want to see the actual window, you would create a simple window like this.
    state.root = XCreateSimpleWindow(state.d, RootWindow(state.d, state.screen), settings.window.pos.x, settings.window.pos.y, settings.window.dim.width,
                                 settings.window.dim.height, settings.window.border_width, border, background);
    XMapWindow(state.d, state.root);
❱

◀private: static▶ X11_Window_Geometry ☀get_geometry(Display * display, Window w)❰
    X11_Window_Geometry geo;
    Window theTempRoot;
    XGetGeometry(display, w, &theTempRoot,
               &geo.x, &geo.y,
               &geo.width, &geo.height,
               &geo.border_width, &geo.depth);
  return geo;
❱
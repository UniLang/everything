class


⚯
❪"code/utilities/types/strings/transformers/trimming/lib"❫
❪"code/utilities/types/converters/lib"❫
⚞⚟

//TODO: trimming could be done at storage time? inside tokenizer?
◀public: static▶ void ☀Normalize(Structure & structure)❰
    
    //TODO: find a way to get all Token Values


	//token trimming
    for (auto & method: structure.methods.methods){
		Normalize_Token(method.names.function_name);
        Normalize_Token(method.names.original_function_name);
        Normalize_Token(method.names.unique_mangle_name);
        for (auto & alternate: method.names.alternative_expression_names){
			Normalize_Token(alternate.name);
		}
		for (auto & reason: method.depreciation_reasons){
			Normalize_Token(reason);
		}
        Normalize_Token(method.subgroup);
        Normalize_Token(method.brief_description);
        Normalize_Token(method.detailed_description);

       //TODO: parameters
       //TODO: exception stuff
       
	}
❱

◀private: static▶ void ☀Normalize_Token(Token_Value & token)❰
	auto temp = as_string(token.value);
	trim(temp);
	token.value = as_wstring(temp);
❱
class


❪"code/utilities/linguistics/computer/frontends/parts/data_member/data_member_options"❫
⚯
❪"code/utilities/types/converters/lib"❫
⚞⚟

◀public: static▶ std::vector<Body_Token_Value> ☀Create(Special_Printf_Type type, Data_Member_Item const& item, C_Language_Version const& version)❰
    
    //create special printf
    std::vector<Body_Token_Value> body;
    Body_Token_Value t;
    
    t.name = Body_Token_Name::REGULAR;
    t.value =  L"printf(\"%s%s: %";
    body.push_back(t);


	 //get the specifier
     Printf_Specifier_Settings settings;
     auto specifier = Printf_Specifier_Getter::Get(version,settings,type.unilang_type_name);
    
    t.name = Body_Token_Name::REGULAR;
    t.value =  as_wstring(specifier);
    body.push_back(t);
    
    t.name = Body_Token_Name::REGULAR;
    t.value =  L"\\n\",AsciiStringCStr(&tIndent),\"" + item.name.value + L"\",";
    body.push_back(t);
    
    body+=type.body;
    
    t.name = Body_Token_Name::REGULAR;
    t.value =  L");";
    body.push_back(t);
    
    return body;
❱

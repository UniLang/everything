class
❪vector❫
❪string❫
❪unordered_map❫
❪"code/utilities/code/style_theme/style_lookup_map"❫
❪"code/utilities/data_structures/graphics/objects/label/style/default_label_styles"❫
⚯

⚞⚟

◀public: static▶ Style_Lookup_Map ☀Get_Default_Theme()❰

    Style_Lookup_Map x;
    
    //main theme styling
    x.map.insert({"code/",Code()});
    x.map.insert({"code/module/",Code_Module()});
    x.map.insert({"code/module/name/",Code_Module_Name()});
    x.map.insert({"code/module/code_type/",Code_Module_Code_Type()});
    x.map.insert({"code/module/foreseeable change/",Code_Module_Foreseeable_Change()});
    x.map.insert({"code/module/foreseeable change/pk/",Code_Module_Foreseeable_Change_Pk()});
    x.map.insert({"code/module/foreseeable change/change/",Code_Module_Foreseeable_Change_Change()});
    x.map.insert({"code/module/foreseeable change/reason/",Code_Module_Foreseeable_Change_Reason()});
    x.map.insert({"code/module/foreseeable change/percentage/",Code_Module_Foreseeable_Change_Percentage()});
    
    //default styling if missing
    x.default_styles.label_styles.emplace_back(Default_Label_Styles::Gray());
    x.default_styles.label_styles.emplace_back(Default_Label_Styles::Gray());
    
    return x;
❱


◀private: static▶ Style_Theme ☀Code()❰
    Style_Theme theme;
    theme.label_styles.emplace_back(Default_Label_Styles::Gray());
    theme.label_styles.emplace_back(Default_Label_Styles::Gray());
    return theme;
❱
◀private: static▶ Style_Theme ☀Code_Module()❰
    Style_Theme theme;
    theme.label_styles.emplace_back(Default_Label_Styles::Light_Purple());
    theme.label_styles.emplace_back(Default_Label_Styles::Light_Purple());
    return theme;
❱
◀private: static▶ Style_Theme ☀Code_Module_Name()❰
    Style_Theme theme;
    theme.label_styles.emplace_back(Default_Label_Styles::Blue());
    theme.label_styles.emplace_back(Default_Label_Styles::Blue());
    return theme;
❱
◀private: static▶ Style_Theme ☀Code_Module_Code_Type()❰
    Style_Theme theme;
    theme.label_styles.emplace_back(Default_Label_Styles::Gray());
    theme.label_styles.emplace_back(Default_Label_Styles::Blue());
    return theme;
❱


◀private: static▶ Style_Theme ☀Code_Module_Foreseeable_Change()❰
    Style_Theme theme;
    theme.label_styles.emplace_back(Default_Label_Styles::Light_Orange());
    theme.label_styles.emplace_back(Default_Label_Styles::Light_Orange());
    return theme;
❱
◀private: static▶ Style_Theme ☀Code_Module_Foreseeable_Change_Pk()❰
    Style_Theme theme;
    theme.label_styles.emplace_back(Default_Label_Styles::Light_Orange());
    theme.label_styles.emplace_back(Default_Label_Styles::Light_Orange());
    return theme;
❱
◀private: static▶ Style_Theme ☀Code_Module_Foreseeable_Change_Change()❰
    Style_Theme theme;
    theme.label_styles.emplace_back(Default_Label_Styles::Light_Orange());
    theme.label_styles.emplace_back(Default_Label_Styles::Light_Orange());
    return theme;
❱
◀private: static▶ Style_Theme ☀Code_Module_Foreseeable_Change_Reason()❰
    Style_Theme theme;
    theme.label_styles.emplace_back(Default_Label_Styles::Light_Orange());
    theme.label_styles.emplace_back(Default_Label_Styles::Light_Orange());
    return theme;
❱
◀private: static▶ Style_Theme ☀Code_Module_Foreseeable_Change_Percentage()❰
    Style_Theme theme;
    theme.label_styles.emplace_back(Default_Label_Styles::Light_Orange());
    theme.label_styles.emplace_back(Default_Label_Styles::Light_Orange());
    return theme;
❱
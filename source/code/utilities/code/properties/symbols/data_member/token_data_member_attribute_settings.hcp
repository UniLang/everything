class
❪"token_data_member_state_attribute_settings"❫
❪"code/utilities/code/properties/symbols/shared/token_access_attribute_settings"❫
⚯

⚞⚟


◀
public:
    
    Token_Access_Attribute_Settings access;
    Token_Data_Member_State_Attribute_Settings state;
    
    //friend
    char _friend='f';
    
    //reflection
    char serializable='i';           //serializing the enveloping type includes serializing the tagged data member
    char printable='p';              //printing the enveloping type includes printing the tagged data member
    char comparable='=';             //comparing the enveloping type includes comparing the tagged data member
    char log_value_transition='~';   //logging the value transitions of the enveloping type includes logging value changes on the tagged data member
    
    //storage
    char static_storage='s';
    char extern_storage='e';
    
    //mutability (hacky attribute used in OO)
    char _mutable='m';
    
    //read only (TODO: think about transitive const) example: DLang
    //in java, this is the "final"
    char const_qualifier='c';
    
    //a way to tag a data member as being the enveloping type's name.
    //this is important for particular method generation.  For example,
    //a method that prints the changes between a type that has transitioned.  
    //It can provide a better description by using this data member as the name of the instantiation.  
    //Sometimes you might just want to use the identifier of the instantiation, but that is not always possible
    //if say you multiple instances of a type inside of a container.  Iterating over and printing something about them
    //would be confusing without giving each element a name internally in the type.  That's why we may need this special tag attribute.
    char name_of_enveloping_type='*';
    
    //whether or not the type is actually optional
    char optional='?';
    
    //atomic...
▶

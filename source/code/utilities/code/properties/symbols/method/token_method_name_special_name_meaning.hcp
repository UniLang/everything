class
❪string❫
⚯

⚞⚟


◀
public:
    
    //Management Methods
    std::string constructor = "-constructor";
    std::string copy_constructor = "-copy constructor";
    std::string destructor = "-destructor";
    
    //Arithmetic Operators
    std::string addition = "+";
    std::string substraction = "-";
    std::string unary_plus = "+.";
    std::string unary_minus = "-.";
    std::string multiplication = "*";
    std::string division = "/";
    std::string modulo = "%";
    std::string prefix_increment = "++.";
    std::string postfix_increment = ".++";
    std::string prefix_decrement = "--.";
    std::string postfix_decrement = ".--";
    
    //Relational Operators
    std::string equal_to = "==";
    std::string not_equal_to = "!=";
    std::string greater_than = ">";
    std::string less_than = "<";
    std::string greater_than_or_equals_to = ">=";
    std::string less_than_or_equals_to = "<=";
    
    //Logical Operators
    std::string logical_not = "!";
    std::string logical_and = "&&";
    std::string logical_or = "||";
    
    //Bitwise Operators
    std::string bitwise_not = "~";
    std::string bitwise_and = "&";
    std::string bitwise_or = "|";
    std::string bitwise_xor = "^";
    std::string bitwise_left_shift = "<<";
    std::string bitwise_right_shift = ">>";
    
    //Compound Assignment Operators
    std::string addition_assignment = "+=";
    std::string subtraction_assignment = "-=";
    std::string multiplication_assignment = "*=";
    std::string divison_assignment = "/=";
    std::string modulo_assignment = "%=";
    std::string bitwise_and_assignment = "<<=";
    std::string bitwise_or_assignment = ">>=";
    std::string bitwise_xor_assignment = "&=";
    std::string bitwise_left_shift_assignment = "^=";
    std::string bitwise_right_shift_assignment = "|=";
    
    //Member and Pointer Operators
    std::string  subscript = "[]";
    std::string  deref = "*.";
    std::string  address_of = "&";
    std::string  member_access_through_pointer = "->";
    std::string  member_access_through_structure = ".";
    std::string  member_access_through_pointer_deref = "->*";
    std::string  member_access_through_structure_deref = ".*";
    
    //Other Operators
    //...
    
    
▶

class
❪iostream❫
❪vector❫
❪string❫
❪cmath❫
❪"code/utilities/graphics/imgui/loop/mechanics"❫
❪"code/utilities/peripheral/keyboard/state/keyboard_state"❫
❪"code/utilities/peripheral/keyboard/state/buffered_chars_getter"❫
❪"code/utilities/peripheral/keyboard/key_detector"❫
⚯
⚞⚟

//this sucks because its probably inefficient and make keymapping hard.  
//but I wanted to do something that was extracted from imgui first
◀public: static▶ Keyboard_State ☀Get()❰
    Keyboard_State x;
    
    x.shift = Key_Detector::Get_Shift_State();
    x.backspace = Key_Detector::Get_Backspace_State();
    x.delete_ = Key_Detector::Get_Delete_State();
    x.ctrl = Key_Detector::Get_Ctrl_State();
    x.esc = Key_Detector::Get_Escape_State();
    x.tab = Key_Detector::Get_Tab_State();
    x.alt = Key_Detector::Get_Alt_State();
    
    x.one = Key_Detector::Get_One_State();
    x.two = Key_Detector::Get_Two_State();
    x.three = Key_Detector::Get_Three_State();
    x.four = Key_Detector::Get_Four_State();
    
    x.f5 = Key_Detector::Get_F5_State();
    
    x.a = Key_Detector::Get_A_State();
    x.b = Key_Detector::Get_B_State();
    x.c = Key_Detector::Get_C_State();
    x.v = Key_Detector::Get_V_State();
    x.s = Key_Detector::Get_S_State();
    x.l = Key_Detector::Get_L_State();
    
    x.left = Key_Detector::Get_Left_Key_State();
    x.right = Key_Detector::Get_Right_Key_State();
    x.up = Key_Detector::Get_Up_Key_State();
    x.down = Key_Detector::Get_Down_Key_State();
    
    x.buffered_chars = Buffered_Chars_Getter::Get();
    
    //ImGuiIO &io = ImGui::GetIO();
    // memset(io.NavInputs, 0, sizeof(io.NavInputs));
    // memset(io.KeysDown, 0, sizeof(io.KeysDown));
    
    return x;
❱
class
❪string❫
❪"code/utilities/filesystem/paths/lib"❫
❪"code/utilities/filesystem/files/creating/lib"❫
❪"code/utilities/types/strings/transformers/appending/lib"❫
❪"code/tools/reflexivity/settings/reflexive_refresh_settings"❫
❪"code/tools/reflexivity/publish/all_essay_publisher"❫
⚯
❪"code/tools/reflexivity/docker/dockerfile_refresher"❫
❪"code/tools/reflexivity/bazelrc/bazelrc_refresher"❫
❪"code/tools/reflexivity/bazel_wrapper/bazel_wrapper_refresher"❫
❪"code/tools/reflexivity/deps_define/refresh/deps_definition_refresher"❫
❪"code/tools/reflexivity/settings/reflexive_refresh_settings_getter"❫
❪"code/utilities/program/common_actions/locale/lib"❫
❪"code/utilities/program/name/program_name_getter"❫
❪"code/utilities/output/publisher/essay/essay_publisher"❫
❪"code/utilities/code/concept_tree_to_image"❫
❪"code/tools/reflexivity/deps_define/scan/deps_repo_scanner"❫
❪"code/utilities/build/self_builder"❫
❪"code/tools/reflexivity/target_build_file_refresher"❫
❪"code/utilities/logo/unilang_logo_creator"❫
⚞⚟


// Parts of the repository (this repository, right here) need generated programatically.  
// The reason we need to generate parts programatically, is so we can try to automatically upgrade portions of the repo infrastructure.
// Like most things, more possibilities open up, when the repo infrastructure is expressed in a data model.

//other bazel reflectivity tools:
//https://github.com/bazelbuild/buildtools
//https://github.com/spotify/bazel-tools

◀public: static▶ void ☀Refresh(Reflexive_Refresh_Settings const& settings)❰

    Set_English_UTF8_Locale();
    
    //things within the repository that are generated
    
    //required for proper build of monorepo
    Target_Build_File_Refresher::Refresh(settings);
    
    //generate unilang documentation
    if (settings.refresh_unilang_documentation){
        std::cout << "Generating Unilang Documentation..." << std::endl;
        //Unilang_Documentation_Generator::Generate();
    }
    
    if (settings.refresh_unilang_logo){
        std::cout << "Generating Unilang Logo..." << std::endl;
        Unilang_Logo_Creator::Create();
    }
    
    //generate unilang documentation
    if (settings.refresh_unilang_concept_tree_image){
        std::cout << "Generating Unilang Concept Tree Image..." << std::endl;
        Concept_Tree_To_Image::Create();
    }
    
    //generate essays
    if (settings.refresh_essays){
        std::cout << "Generating Essays..." << std::endl;
        All_Essay_Publisher::Generate_And_Publish();
    }
    
    //Other responsibilities for maintaining a mono-repo:
    //Outside resources can be fetched reliably (additional mirrors; solutions without Internet)
    //Ensure 3rd party libraries are up-to-date. Update them as necessary.
    //Ensure CI is always passing (debug, optimized, sanitizers) (worker bot)
    //Ensure CI is as fast as possible
    //Ensure Build is as fast as possible
    //Flaky Tests / Flaky Builds
❱


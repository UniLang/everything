class
❪iostream❫
❪string❫
❪utility❫
❪"code/programs/repo_tools/create_bazel_profile/program_options/program_options"❫
❪"code/utilities/filesystem/paths/lib"❫
❪"code/utilities/streams/filestreams/read_all/lib"❫
❪"code/utilities/streams/filestreams/write_all/lib"❫

❪"code/utilities/program/call/process_spawn/process_spawner"❫
❪"code/utilities/types/strings/observers/other/lib"❫
❪"code/utilities/types/strings/transformers/trimming/lib"❫
❪"code/utilities/build/profiler/profile_compilation_timer"❫
❪"code/utilities/types/strings/transformers/other/lib"❫
❪"code/utilities/program/wrappers/bazel/setup/default_bazel_setup_settings"❫
❪"code/utilities/program/wrappers/git/repo_establisher/default_repo_location_getter"❫
❪"code/utilities/program/wrappers/git/repo_establisher/repo_establisher"❫
❪"code/utilities/program/wrappers/bazel/setup/bazel_setup_deriver"❫
❪"code/utilities/program/wrappers/bazel/bazel_runner"❫
❪"code/utilities/program/wrappers/bazel/build_settings"❫
❪"code/utilities/program/wrappers/bazel/default_build_settings"❫
❪"code/utilities/types/strings/observers/path/lib"❫
⚯
⚞⚟


◀public: static▶ void ☀Execute_Needed_Tasks(Program_Options const& options) ❰
    
    
    //get settings
    auto repo = Default_Repo_Location_Getter::Default_Repo_Location_From_Program_Options(options.Run_Dir(),options.Url(),options.Branch());
    auto setup = Default_Bazel_Setup_Settings::Get();
    auto build = Default_Build_Settings::Get();
    
    
    //clone and establish bazel information
    auto established = Repo_Establisher::Establish_And_Get_Path(repo);
    Bazel_Setup_Deriver::Possibly_Derive_Parts_Of_Bazel_Setup(setup,established.path);
    
    //get profile information
    auto bazel = Prepend_Cd_Path(setup.bazel_wrapper.program_name,established.path);
    
    //TODO: pass program_options.Output()
    auto profile_file = Bazel_Runner::Get_Profile_Information(bazel,build,setup.config_settings,options.Target());
    std::cout << profile_file << std::endl;
    
❱
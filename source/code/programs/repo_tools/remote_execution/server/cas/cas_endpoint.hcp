class
❪iostream❫
❪string❫
❪set❫
❪utility❫
❪memory❫
❪grpcpp/grpcpp.h❫
❪grpcpp/health_check_service_interface.h❫
❪grpcpp/ext/proto_server_reflection_plugin.h❫
❪"build/bazel/remote/execution/v2/remote_execution.grpc.pb.h"❫
❪"code/utilities/formats/serialization/protobuf"❫
❪"code/programs/repo_tools/remote_execution/server/settings/server_settings"❫
❪"code/utilities/remote_execution/services/grpc_glue"❫
❪"include/semver"❫
❪"code/utilities/output/logging/debug_spdlog"❫
⚯
⚞⚟

◀public: static▶ grpc::Status ☀Find_Missing_Blobs(Server_Settings const& settings, grpc::ServerContext* context, const build::bazel::remote::execution::v2::FindMissingBlobsRequest* request, build::bazel::remote::execution::v2::FindMissingBlobsResponse* response)❰
    SPDLOG_DEBUG("in:" + Protobuf_Message_To_Inline_Json(*request));
    *response = Claim_All_Blobs_Are_Missing(*request);
    SPDLOG_DEBUG("out:" + Protobuf_Message_To_Inline_Json(*response));
    return grpc::Status::OK;
❱
◀public: static▶ grpc::Status ☀Batch_Update_Blobs(Server_Settings const& settings, grpc::ServerContext* context, const build::bazel::remote::execution::v2::BatchUpdateBlobsRequest* request, build::bazel::remote::execution::v2::BatchUpdateBlobsResponse* response)❰
    SPDLOG_DEBUG("in:" + Protobuf_Message_To_Inline_Json(*request));
    //TODO
    SPDLOG_DEBUG("out:" + Protobuf_Message_To_Inline_Json(*response));
    return grpc::Status::OK;
❱
◀public: static▶ grpc::Status ☀Batch_Read_Blobs(Server_Settings const& settings, grpc::ServerContext* context, const build::bazel::remote::execution::v2::BatchReadBlobsRequest* request, build::bazel::remote::execution::v2::BatchReadBlobsResponse* response)❰
    SPDLOG_DEBUG("in:" + Protobuf_Message_To_Inline_Json(*request));
    //TODO
    SPDLOG_DEBUG("out:" + Protobuf_Message_To_Inline_Json(*response));
    return grpc::Status::OK;
❱
◀public: static▶ grpc::Status ☀Get_Tree(Server_Settings const& settings, grpc::ServerContext* context, const build::bazel::remote::execution::v2::GetTreeRequest* request, grpc::ServerWriter< build::bazel::remote::execution::v2::GetTreeResponse>* writer)❰
    SPDLOG_DEBUG("in:" + Protobuf_Message_To_Inline_Json(*request));
    //TODO
    return grpc::Status::OK;
❱

◀private: static▶ build::bazel::remote::execution::v2::FindMissingBlobsResponse ☀Claim_All_Blobs_Are_Missing(build::bazel::remote::execution::v2::FindMissingBlobsRequest const& request)❰
    
    build::bazel::remote::execution::v2::FindMissingBlobsResponse result;
    for (int i = 0; i < request.blob_digests_size(); i++) {
        auto add_blob = result.add_missing_blob_digests();
        *add_blob = request.blob_digests(i);
    }
    return result;
❱


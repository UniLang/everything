class
❪iostream❫
❪string❫
❪set❫
❪utility❫
❪memory❫
❪grpcpp/grpcpp.h❫
❪grpcpp/health_check_service_interface.h❫
❪grpcpp/ext/proto_server_reflection_plugin.h❫
❪"build/bazel/remote/execution/v2/remote_execution.grpc.pb.h"❫
❪"code/utilities/formats/serialization/protobuf"❫
❪"code/programs/repo_tools/remote_execution/server/settings/server_settings"❫
❪"code/utilities/remote_execution/services/grpc_glue"❫
❪"include/semver"❫
❪"code/utilities/output/logging/debug_spdlog"❫
❪"code/programs/repo_tools/remote_execution/server/capabilities/server_capabilities_getter"❫
⚯
⚞⚟

◀public: static▶ grpc::Status ☀GetCapabilities(Server_Settings const& settings, grpc::ServerContext* context, const build::bazel::remote::execution::v2::GetCapabilitiesRequest* request, build::bazel::remote::execution::v2::ServerCapabilities* response)❰
    SPDLOG_DEBUG("in:" + Protobuf_Message_To_Inline_Json(*request));
    *response = Server_Capabilities_Getter::Get(settings);
    SPDLOG_DEBUG("out:" + Protobuf_Message_To_Inline_Json(*response));
    return grpc::Status::OK;
❱
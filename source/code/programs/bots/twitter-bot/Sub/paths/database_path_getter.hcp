class
❪"utilities"❫
❪"systems"❫
❪"program_input"❫
❪"paths"❫
⚯
⚞⚟

◀public: static▶ Database_Paths ☀Get(Program_Input const& input, std::string const& folder) ❰
    Database_Paths paths;
    
    
    paths.current_response_number = input.settings.file.config_path + '/' + input.options.account + '/' + folder + '/' + input.settings.file.current_responses;
    paths.initial_database_input  = input.settings.file.config_path + '/' + input.options.account + '/' + folder + '/' + input.settings.file.initial_database_input;
    paths.max_response            = input.settings.file.config_path + '/' + input.options.account + '/' + folder + '/' + input.settings.file.max_response;
    paths.response_database       = input.settings.file.config_path + '/' + input.options.account + '/' + folder + '/' + input.settings.file.response_database;
    
    Ensure_File_Exists(paths.current_response_number);
    Ensure_File_Exists(paths.initial_database_input);
    Ensure_File_Exists(paths.max_response);
    //Ensure_File_Exists(paths.response_database); not required to exist
    
    return paths;
❱

◀private: static▶ void ☀Ensure_File_Exists(std::string const& file_name)❰
    if (!File_Exists(file_name)){ Exit_With_Error("file: " + file_name + " does not exist!");}
❱
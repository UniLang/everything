class
❪"utilities"❫
❪"systems"❫
❪"program_input"❫
❪"paths"❫
⚯
❪"database_path_getter"❫
⚞⚟

◀public: static▶ Paths ☀Get(Program_Input const& input) ❰
    Paths paths;
    
    paths.bot_type                = input.settings.file.config_path + '/' + input.options.account + '/' + input.settings.file.bot_type_info;
    paths.login_info              = input.settings.file.config_path + '/' + input.options.account + '/' + input.settings.file.login_info;
    paths.tweet_post_script       = input.settings.file.config_path + '/' + input.settings.file.twitter_post_script;
    paths.normal                  = Database_Path_Getter::Get(input,input.settings.file.normal_database);
    paths.christmas               = Database_Path_Getter::Get(input,input.settings.file.christmas_database);
    
    //ensure paths exist
    Ensure_File_Exists(paths.bot_type);
    Ensure_File_Exists(paths.login_info);
    Ensure_File_Exists(paths.tweet_post_script);
    
    return paths;
❱

◀private: static▶ void ☀Ensure_File_Exists(std::string const& file_name)❰
    if (!File_Exists(file_name)){ Exit_With_Error("file: " + file_name + " does not exist!");}
❱
class
❪"utilities"❫
❪"systems"❫
❪"tweet"❫
❪"program_input"❫
⚯
⚞⚟

◀public: static▶ bool ☀Validate(Program_Input const& input, Tweet const& tweet, mpz_class const& line_number) ❰

    bool valid = true;
    if (!Correct_Tweet_Length(input,tweet,line_number)){
        valid = false;
    }

    return valid;
❱

◀private: static▶ bool ☀Correct_Tweet_Length(Program_Input const& input, Tweet const& tweet, mpz_class const& line_number) ❰
    
    for (auto const& message: tweet.lines){
        if (message.length() > input.settings.tweet.max_tweet_length){
            std::cerr << "Tweet is too long on line " << to_string(line_number) << '\n';
            return false;
        }
        if(message.length() < input.settings.tweet.min_tweet_length){
            std::cerr << "Tweet is too short on line "  << to_string(line_number) << '\n';
            return false;
        }
    }
    
    return true;
❱
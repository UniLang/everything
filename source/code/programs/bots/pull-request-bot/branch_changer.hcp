class
❪"systems"❫
❪"utilities"❫
⚯
❪"process_spawner"❫

⚞⚟

◀public: static▶ bool ☀Change_Branch(std::string branch_name) ❰
    Exit_If_Command_Fails("nevermind","clearing changes in current branch has failed");
    Exit_If_Command_Fails("git checkout " + branch_name, "switching to " + branch_name + " has failed");
❱

◀public: static▶ void ☀Exit_If_Command_Fails(std::string command, std::string error_message) ❰
    auto data = Process_Spawner::Execute_And_Get_Back_Results(command);
    if (data.return_code != 0){
        Exit_With_Error(error_message);
    }
❱
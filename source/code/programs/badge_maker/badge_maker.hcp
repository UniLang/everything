class
❪string❫
❪unordered_map❫
❪"code/utilities/data_structures/graphics/bitmap/full_color_bitmap/full_color_bitmap"❫
❪"code/utilities/fonts/bdf/settings/character_segment"❫
❪"code/programs/ide/settings/ide_settings"❫
❪"code/utilities/data_structures/graphics/objects/label/data/label_settings"❫
❪"code/utilities/data_structures/graphics/objects/mouse/events/mouse_events_checker"❫
❪"code/utilities/graphics/imgui/render/elements/rectangle_drawer"❫
❪"code/utilities/graphics/imgui/render/elements/full_color_bitmap_drawer"❫
❪"code/utilities/data_structures/graphics/text/text_to_bitmap"❫
❪"code/utilities/graphics/imgui/ui_renders"❫
❪"code/utilities/data_structures/graphics/bitmap/pixel/pixel_slider"❫
❪"code/utilities/colors/defaults/rectangle_shades"❫
❪"code/utilities/data_structures/graphics/objects/faced_label/data/positioned_faced_label"❫
❪"code/utilities/data_structures/graphics/objects/frame_elements"❫
⚯
❪"code/utilities/data_structures/graphics/objects/label/style/default_label_styles"❫
❪"code/utilities/data_structures/graphics/objects/faced_label/faced_label_converter"❫
❪"code/utilities/data_structures/graphics/objects/mouse/premade/standard_mouse"❫
❪"code/utilities/fonts/bdf/complete/unilang/unilang_segments"❫
❪"code/utilities/fonts/bdf/character_maps/character_maps"❫
❪"code/utilities/fonts/bdf/character_maps/character_maps_getter"❫
❪"code/utilities/graphics/imgui/background/background_settings_getter"❫
❪"code/utilities/execution/thread_pool_getter"❫
❪"code/utilities/data_structures/graphics/objects/slider/default_sliders"❫
❪"code/utilities/graphics/cairo/render/cairo_render_settings"❫
❪"code/utilities/graphics/cairo/render/frame_renderer"❫
❪"code/utilities/data_structures/graphics/objects/faced_label/faced_label_drawer"❫
⚞⚟



◀public: static▶ void ☀Make() ❰
    
    
    //other settings
    Pc_Input_State pc_input;
    auto segments = Unilang_Segments::Get();
    auto unilang_font_lookup = Character_Maps_Getter::Get(segments);
    
    //badge
    Positioned_Faced_Label badge = Faced_Label_Example();
    badge.pos.x = 0;
    badge.pos.y = 0;
    badge.state.faces[0].label.message = "hello world";
    badge.state.faces[0].label.styles.regular_active.width.grow_width = true;
    badge.state.faces[0].label.styles.regular_nonactive.width.grow_width = true;
    badge.state.faces[0].label.styles.hovered_active.width.grow_width = true;
    badge.state.faces[0].label.styles.hovered_nonactive.width.grow_width = true;
    
    Frame_Elements elements;
    //elements.types += Faced_Label_Drawer::Full_Draw(unilang_font_lookup,badge,pc_input).types;
    
    
    Cairo_Render_Settings settings;
    settings.file_name = "/home/laptop/Desktop/badge_example.png";
    Frame_Renderer::Render(elements,settings);
❱

◀private: static▶ Positioned_Faced_Label ☀Faced_Label_Example()❰
    Positioned_Faced_Label x;
    Label_Face face;
    
    //add face 1
    face.name = "face 1";
    face.label.message = "hello this is face number 1";
    face.label.styles = Default_Label_Styles::Label_Style_1();
    x.state.faces.emplace_back(face);
    
    //add face 2
    face.name = "face 2";
    face.label.message = "whats good. face number 2 here";
    face.label.styles = Default_Label_Styles::Label_Style_1();
    x.state.faces.emplace_back(face);
    
    //add face 3
    face.name = "face 3";
    face.label.message = "you know who it is.  its the third face";
    face.label.styles = Default_Label_Styles::Label_Style_1();
    x.state.faces.emplace_back(face);
    
    return x;
❱
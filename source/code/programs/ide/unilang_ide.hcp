class
❪string❫
❪iostream❫
❪"code/programs/ide/program_options/program_options"❫
⚯
❪"code/programs/ide/settings/data/ide_settings"❫
❪"code/programs/ide/settings/ide_default_settings_getter"❫
❪"code/programs/ide/settings/ide_settings_getter"❫
❪"code/utilities/data_structures/graphics/objects/frame_elements"❫
❪"code/utilities/graphics/imgui/loop/mechanics"❫
❪"code/utilities/graphics/imgui/ui_renders"❫
❪"code/utilities/graphics/imgui/render/frame_renderer"❫
❪"code/programs/ide/frame/frame_logic_updater"❫
❪"code/programs/ide/global_actions/global_action_handler"❫
❪"code/utilities/data_structures/graphics/image/positioned_image_data"❫
❪"code/programs/ide/gl_context_element_load"❫
⚞⚟


◀public: static▶ int ☀Run(Program_Options const& po)❰



    auto s = Ide_Settings_Getter::Get(po.File());
    
    Frame_Elements elements;
    auto before = [&]()                  {
        
        //we do things here because the GL context is needed for images
        for (auto & it: s.elements.types){
            Gl_Context_Element_Load::Load_Image_If_Needed(it);
        }
    };
    auto logic =  [&](SDL_Window* window) {
    
        elements = Frame_Logic_Updater::each_frame(s,window);
    
    };
    auto render = [&](SDL_Window* window) {
        
        Frame_Renderer::Render(s.desktop.background,elements);
        
        // Position pos;
        // pos.x = 0;
        // pos.y = 0;
        // ImDrawList *dl = ImGui::GetWindowDrawList();
        // img.imgui_image();
        // img.imgui_drawlist(dl,pos);
        
        //this is handled here because for some reason blocking on an OS window during logic update causes a double key-press.  
        //so for example, ctrl+s to save will be triggered twice, and the window will pop up twice.  Maybe I should do something with futures/async,
        //but as far as I can tell, having this here instead of logic is the easiest fix.
        Global_Action_Handler::Handle(s, window);
        
       //bool flag = true;
       //ImGui::ShowDemoWindow(&flag);
    };
    
    return Mechanics::render_each_frame(s.desktop.init,before,logic,render);


❱
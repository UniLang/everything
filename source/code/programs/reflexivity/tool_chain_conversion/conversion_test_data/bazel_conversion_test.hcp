class
❪vector❫
❪string❫
❪"code/utilities/formats/artifact/artifact_type"❫
❪"code/programs/reflexivity/tool_chain_conversion/conversion_test_data/bazel_conversion_test_file_contents"❫
⚯

⚞⚟

◀public:

    //bazel tests where we are normally going from unilang to another source file
    //its important that the trans-compilation process is done strictly through bazel rules and hermetic toolchains
    std::vector<Artifact_Type> transcompilation_chain;
    
    //a name space of words categorizing the feature being tested
    std::vector<std::string> feature_categorization;
    
    //the contents of the source files and build data needed to
    //test the transcompilation within bazel
    Bazel_Conversion_Test_File_Contents contents;
▶

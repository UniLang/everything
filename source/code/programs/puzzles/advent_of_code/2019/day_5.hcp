class
❪"code/utilities/data_structures/compass_directions/compass_direction_diagnonal_movement"❫
❪"code/utilities/data_structures/point/point_line"❫
❪"code/utilities/data_structures/point/point_mover"❫
⚯
❪"code/utilities/types/general/lib"❫
❪"code/utilities/types/vectors/operators/lib"❫
❪"code/utilities/types/vectors/transformers/lib"❫
❪"code/utilities/types/vectors/converters/lib"❫
❪"code/utilities/types/vectors/observers/lib"❫
❪"code/utilities/types/strings/observers/converting/lib"❫
❪"code/utilities/types/strings/observers/splitting/lib"❫
❪"code/utilities/types/strings/transformers/removing/lib"❫
❪"code/utilities/program/common_actions/exits/lib"❫
❪"code/utilities/web/lib"❫
❪"code/utilities/output/printers/lib"❫
❪"code/utilities/web/automate/browser/default_browser_settings_getter"❫
❪"code/utilities/web/automate/browser/browser_creator"❫
❪"code/utilities/web/automate/navigation/browser_navigator"❫

❪"code/utilities/formats/json/converters/lib"❫
❪"code/utilities/data_structures/point/point"❫
❪"code/utilities/data_structures/point/point_line_intersections_getter"❫
❪"code/utilities/data_structures/point/point_line_to_points"❫
❪"code/utilities/types/int/int"❫
❪"code/programs/puzzles/advent_of_code/2019/int_code_computer"❫
⚞⚟

◀public: static▶ void ☀Part_1(std::vector<std::string> lines) ❰

    //get program input
    auto num_strs = Split_Into_Parts_From_Comma(lines[0]);
    
    //run computer
    Int_Code_Computer_State state;
    state.memory = num_strs;
    auto result = Int_Code_Computer::Run(state,{"1"});
    
    Exit_If_Not_Equal(Last_Element(result),"14522484");
    
❱

◀public: static▶ void ☀Part_2(std::vector<std::string> lines) ❰

    //get program input
    auto num_strs = Split_Into_Parts_From_Comma(lines[0]);
    
    //run computer
    Int_Code_Computer_State state;
    state.memory = num_strs;
    auto result = Int_Code_Computer::Run(state,{"5"});
    
    Exit_If_Not_Equal(Last_Element(result),"4655956");
❱




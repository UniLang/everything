class
⚯
❪"code/utilities/types/general/lib"❫
❪"code/utilities/types/vectors/transformers/lib"❫
❪"code/utilities/types/strings/observers/converting/lib"❫
❪"code/utilities/types/strings/transformers/removing/lib"❫
❪"code/utilities/program/common_actions/exits/lib"❫
❪"code/utilities/web/lib"❫
❪"code/utilities/output/printers/lib"❫
❪"code/utilities/web/automate/browser/default_browser_settings_getter"❫
❪"code/utilities/web/automate/browser/browser_creator"❫
❪"code/utilities/web/automate/navigation/browser_navigator"❫
❪"code/utilities/streams/filestreams/read_all/lib"❫
❪"code/utilities/streams/filestreams/write_all/lib"❫
❪"code/utilities/filesystem/files/observers/lstat_wrap/lib"❫
❪"code/utilities/filesystem/paths/lib"❫
❪pybind11/embed.h❫
⚞⚟

◀public: static▶ std::vector<std::string> ☀Get(std::string const& year, std::string const& day) ❰

    std::string domain = "adventofcode.com";
    std::cout << "day " << day << "..." << std::endl;

    //where to get the input from
    std::string url = "https://" + domain + "/" + year + "/day/" + day + "/input";
    std::string file = Full_Path_To_Desktop() + "advent_" + year + "_" + day + ".txt";
    
    return Get_Input_From_Cache_Or_Website(url,file);
❱



◀private: static▶ std::vector<std::string> ☀Get_From_Website(std::string const& url) ❰

    //get the input (we have to use a browser driver because we need to be logged in)
    pybind11::scoped_interpreter py_guard{};
    auto settings = Default_Browser_Settings_Getter::Get();
    settings.headless = true;
    Browser_Creator::Create(settings);
    auto lines = Browser_Navigator::Go_To_Url_And_Extract_Lines(settings,url);
    
    //there's some html cruft to remove
    Keep_End_Chars_Until_Char_Is_Found(lines[0],'>');
    Remove_Last_Element(lines);
    
    return lines;
❱

◀private: static▶ std::vector<std::string> ☀Get_Input_From_Cache_Or_Website(std::string const& url, std::string const& file) ❰

    std::vector<std::string> lines;
    if (File_Exists(file)){
        lines = Read_Each_Line_Of_File_Into_Vector(file);
    }
    else{
        lines = Get_From_Website(url);
        
        //cache the file locally so we don't have to keep querying the server.
        Write_Each_Line_Of_Vector_Into_File(file,lines);
    }
    
    return lines;
❱
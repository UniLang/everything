class
❪"utilities"❫
❪"systems"❫
❪"taxi_cab_results_getter"❫ //1
⚯
⚞⚟

◀public: static▶ void ☀Go()❰
    
    //file I/O
    auto input = Get_Comma_Seperated_Values_From_File_Where_Each_Value_Is_A_Pair_Of_Char_Int("data/1.txt");
    
    //convert input to a taxi cab path
    Taxi_Cab_Path path;
    for (auto const& it: input){
        Handedness direction = Handedness::RIGHT;
        if (it.first == 'L'){direction = Handedness::LEFT;}
        path.steps.emplace_back(direction,it.second);
    }
    
    //answer 1
    auto end = Taxi_Cab_Results_Getter::Get_Final_Destination(path);
    std::cout << std::abs(end.first) + std::abs(end.second) << '\n';
    
    //answer 2
    auto repeat = Taxi_Cab_Results_Getter::Get_First_Revisted_Location(path);
    std::cout << std::abs(repeat.first) + std::abs(repeat.second) << '\n';
❱
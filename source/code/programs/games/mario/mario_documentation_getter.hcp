class
❪iostream❫
❪fstream❫
❪string❫
❪"code/utilities/documentation/common_documentation_getter"❫
⚯
❪"code/utilities/types/converters/lib"❫
❪"code/utilities/formats/json/converters/lib"❫
⚞⚟

◀public: static▶ Structure ☀Get() ❰
    Structure s;
    s.name = "mario";
    s.literature.paragraphs.emplace_back(Title());
    s.literature.paragraphs.emplace_back(Introduction());
    s.literature.paragraphs.emplace_back(Common_Documentation_Getter::Common_Installation_Instructions("mario"));
    return s;
❱


◀private: static▶ Paragraph ☀Title() ❰
    Paragraph p;
    p.depth.value = as_wstring("0");
    p.title.value = as_wstring("Mario on your desktop");
    
    Sentence s;
    Sentence_Image img;
    img.alternative_text.value = as_wstring("Mario");
    s.images.emplace_back(img);
    p.sentences.emplace_back(s);
    return p;
❱

◀private: static▶ Paragraph ☀Introduction() ❰
    Paragraph p;
    p.depth.value = as_wstring("0");
    p.title.value = as_wstring("Introduction");
    
    Add_Sentence(p,"You know mario the plummer? well he's back for new adventures on the PC.");
    Add_Sentence(p,"This is like mario maker but with no restrictions and tons of cool build items");
    Add_Sentence(p,"join the fun");
    Add_Sentence(p,"play pre-built levels");
    Add_Sentence(p,"make your own");
    Add_Sentence(p,"share with friends");
    return p;
❱

◀private: static▶ void ☀Add_Sentence(Paragraph & p, std::string const& str) ❰
    Sentence s;
    s.text.value = as_wstring(str);
    p.sentences.emplace_back(s);
❱
◀private: static▶ void ☀Add_Sentence_With_Code(Paragraph & p, std::string const& str, std::string const& code) ❰
    Sentence s;
    s.text.value = as_wstring(str);
    
    Code_Line line;
    line.line.value = as_wstring(code);
    s.codes.emplace_back(line);
    p.sentences.emplace_back(s);
❱

◀private: static▶ void ☀Add_Sentence_With_Image(Paragraph & p, std::string const& str, std::string const& image_path) ❰
    Sentence s;
    s.text.value = as_wstring(str);
    
    Sentence_Image img;
    img.image_path.value = as_wstring(image_path);
    s.images.emplace_back(img);
    p.sentences.emplace_back(s);
❱
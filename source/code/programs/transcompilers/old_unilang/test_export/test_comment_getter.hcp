class

❪vector❫
❪string❫
❪iostream❫
❪fstream❫
❪"code/utilities/types/converters/lib"❫
❪"code/utilities/filesystem/paths/lib"❫

⚯
❪"code/utilities/types/strings/transformers/casing/case_modifier"❫
❪"code/utilities/types/strings/transformers/appending/lib"❫
❪"code/utilities/types/char/lib"❫
⚞⚟

◀public: static▶ std::string ☀Get(Structure const& structure, std::string const& func_name, Test_Case const& test_case, Test_Case_Attribute_Settings const& settings)❰
    std::string comment;
    
    std::string reason_for_testing = as_string(test_case.reason_for_testing.value);
    
    std::vector<std::string> fail_reasons;
    for (auto const& x: test_case.reasons_for_failing){
        fail_reasons.emplace_back(as_string(x.reason.value));
    }
    
    //possibly attach comment onto test
    if (settings.add_function_under_test){
        comment += "// " + settings.function_under_test_title + ": ";
        comment += func_name;
        comment += "\n";
    }
    
    //possibly attach comment onto test
    if (settings.add_reason_for_testing){
        comment += "// " + settings.reason_for_testing_title + ": ";
        comment += reason_for_testing;
        comment += "\n";
    }
    
    //possibly attach comment onto test
    if (settings.add_failure_explanation){
        comment += "// " + settings.failure_explanation_title + ": ";
        for (auto const& x: fail_reasons){
            comment += x;
            comment += "\n";
        }
    }
    
    return comment;
❱
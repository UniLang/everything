class
❪"boost/throw_exception"❫
❪"boost/exception/all"❫
⚯
❪"code/utilities/colors/lib"❫
⚞⚟
◀public: static▶ void ☀Handle_Exceptions() ❰
    try{throw;}
    catch(std::string const& e                      ){Handle_Exception(e);}
    catch(const char* e                             ){Handle_Exception(e);}
    catch(std::exception const& e                   ){Handle_Exception(e);}
    //add other exceptions...
    catch(...)                                       {Handle_Exception( );}
❱

◀private: static▶ void ☀Handle_Exception(std::string const& e)❰
    Print_Message_Along_With_Diagnostic_Information(e);
❱
◀private: static▶ void ☀Handle_Exception(std::exception const& e)❰
    Print_Message_Along_With_Diagnostic_Information(e.what());
❱

◀private: static▶ void ☀Handle_Exception()❰
    Print_Message_Along_With_Diagnostic_Information
    ("Unknown exception thrown. This should not happen.\nYou found a bug in the software.\nPlease report this.");
❱

//handle other exceptions...

◀private: static▶ void ☀Print_Message_Along_With_Diagnostic_Information(std::string const& exception_message)❰
  Red_Error_Message(exception_message);
  auto diagnostic_info = boost::current_exception_diagnostic_information();
  Red_Error_Message("\n\nCaptured Exception Info:\n" + diagnostic_info);
❱

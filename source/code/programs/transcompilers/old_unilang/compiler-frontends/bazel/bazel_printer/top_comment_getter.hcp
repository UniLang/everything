class

❪string❫
⚯
❪"code/utilities/linguistics/computer/frontends/parts/meta/impl/sections/meta_copyright_getter"❫
❪"code/utilities/types/strings/transformers/appending/lib"❫
❪"code/utilities/types/strings/creators/lib"❫
⚞⚟

◀public: static▶ std::string ☀Get(Build_Rule_Settings const& settings, std::string const& file_name)❰
    std::string result;
    
    //maybe add start comment line
    if (settings.comment_empty_start_line){
        Append_With_Newline(result,settings.comment_marker);
    }
    
    //add copyright
    Append(result,Get_Copyright_Note(settings,file_name));
    
    //maybe add end comment line
    if (settings.comment_empty_bottom_line){
        Append_With_Newline(result,settings.comment_marker);
    }
    
    return result;
❱

◀private: static▶ std::string ☀Get_Copyright_Note(Build_Rule_Settings const& settings, std::string const& file_name)❰

    //should we share these copyright settings? yes, probably fine for now
    auto copyright_settings = settings.portion.meta.copyright;
    auto orgs = settings.portion.meta.organizations;
    
    //leverage copyright creation from build
    auto statement = Meta_Copyright_Getter::Get(copyright_settings,orgs,file_name);

    //add copyright statement
    std::string result;
    Append(result,settings.comment_marker);
    Append(result,Create_String_Of_N_Spaces(settings.comment_gap));
    Append(result,statement);
    
    return result;
❱
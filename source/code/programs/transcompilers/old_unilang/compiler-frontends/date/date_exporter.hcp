class

❪fstream❫
❪iostream❫
❪"code/utilities/contributor/contributor"❫
⚯
❪"code/utilities/types/strings/transformers/appending/lib"❫
❪"code/utilities/types/converters/lib"❫
❪"code/utilities/types/strings/observers/other/lib"❫
❪"code/utilities/types/strings/transformers/casing/case_modifier"❫
❪"code/utilities/program/call/lib"❫
❪"code/utilities/filesystem/paths/lib"❫
❪"code/utilities/types/vectors/observers/lib"❫
❪"code/utilities/filesystem/files/observers/lstat_wrap/lib"❫
❪"code/utilities/time/calendar/tm_wrappers/lib"❫
⚞⚟

◀public: static▶ std::vector<std::string> ☀Export(Structure structure, std::vector<Contributor> const& contributors)❰
  std::vector<std::string> created;
  
  //main
  auto file_name = structure.name + ".date";
  if (!File_Exists(file_name)){
    //created.emplace_back(file_name);
    std::ofstream outfile(file_name);
    outfile << std::to_string(Current_Year());
  }
  
  //test
  auto test_file_name = "test/" + structure.name + ".date";
  if (!File_Exists(test_file_name)){
    //created.emplace_back(test_file_name);
    std::ofstream outfile(test_file_name);
    outfile << std::to_string(Current_Year());
  }
  
  return created;
❱
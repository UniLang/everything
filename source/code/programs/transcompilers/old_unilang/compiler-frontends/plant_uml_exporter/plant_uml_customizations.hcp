class

❪fstream❫
❪iostream❫
⚯
❪"code/utilities/types/strings/transformers/appending/lib"❫
⚞⚟

◀public: static▶ std::string ☀Customize_With_Skin_Params(Structure const& structure, Plant_Uml_Settings const& settings)❰
  std::string s;
  if (settings.skin_param.monochrome){
    Append_With_Newline(s,settings.skin_param.monochrome_str);
  }
  if (settings.skin_param.monochrome_reverse){
    Append_With_Newline(s,settings.skin_param.monochrome_reverse_str);
  }
  if (settings.skin_param.handwritten){
    Append_With_Newline(s,settings.skin_param.handwritten_str);
  }
  if (settings.skin_param.handwritten_reverse){
    Append_With_Newline(s,settings.skin_param.handwritten_reverse_str);
  }
  
  return s;
❱

◀public: static▶ std::string ☀Customize_With_Show_Hide_Settings(Structure const& structure, Plant_Uml_Settings const& settings)❰
    
    std::string s;
  
    //hide empty things
    if (settings.show_hide.hide_empty_members){
      Append_With_Newline(s,settings.show_hide.hide_empty_members_str);
    }
    if (settings.show_hide.hide_empty_methods){
      Append_With_Newline(s,settings.show_hide.hide_empty_methods_str);
    }
    if (settings.show_hide.hide_empty_fields){
      Append_With_Newline(s,settings.show_hide.hide_empty_fields_str);
    }
    if (settings.show_hide.hide_empty_attributes){
      Append_With_Newline(s,settings.show_hide.hide_empty_attributes_str);
    }
    
    //hide all things
    if (settings.show_hide.hide_members){
      Append_With_Newline(s,settings.show_hide.hide_members_str);
    }
    if (settings.show_hide.hide_methods){
      Append_With_Newline(s,settings.show_hide.hide_methods_str);
    }
    if (settings.show_hide.hide_fields){
      Append_With_Newline(s,settings.show_hide.hide_fields_str);
    }
    if (settings.show_hide.hide_attributes){
      Append_With_Newline(s,settings.show_hide.hide_attributes_str);
    }
    
    //hide parts
    if (settings.show_hide.hide_circle){
      Append_With_Newline(s,settings.show_hide.hide_circle_str);
    }
    if (settings.show_hide.hide_stereotype){
      Append_With_Newline(s,settings.show_hide.hide_stereotype_str);
    }
    
    //hide objects
    if (settings.show_hide.hide_class){
      Append_With_Newline(s,settings.show_hide.hide_class_str);
    }
    if (settings.show_hide.hide_interface){
      Append_With_Newline(s,settings.show_hide.hide_interface_str);
    }
    if (settings.show_hide.hide_enum){
      Append_With_Newline(s,settings.show_hide.hide_enum_str);
    }
  
  return s;
❱

◀public: static▶ std::string ☀Customize_Icon_Visibility(Structure const& structure, Plant_Uml_Settings const& settings)❰
    std::string s;
    if (settings.set_visibility_icon_size){
      Append_With_Newline(s,settings.set_visibility_icon_size_str + std::to_string(settings.visibility_icon_size));
    }
    
    return s;
❱
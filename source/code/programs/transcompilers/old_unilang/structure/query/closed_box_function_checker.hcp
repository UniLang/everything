class


❪"code/utilities/comments/doxygen/settings/doxygen_parameter_direction"❫
⚯
❪"code/utilities/types/converters/lib"❫
❪"code/utilities/types/strings/transformers/stripping/lib"❫
❪"code/utilities/types/strings/observers/other/lib"❫
❪"code/utilities/code/query/argument_direction_decider"❫
⚞⚟

//a closed box function is a function that takes all IN parameters and doesnt return anything.
//It makes you question what the function is actually doing then (if anything at all)
//In order for it to be closed box and still serve any meaningful purpose, the function MUST have side effects.
//If the function doesn't have side effects, it was probably a mistake of the author, and one of the parameters should be OUT.. or the function should actually return something
//It raises an interesting challenge for static analysis through because higher order functions (say functions that take lambdas),
//may take the callable as a const&, but use a capture group that allows things to change.
//Regardless of all of that, this may be a simple check you would like to make when evaluating code.
◀public: static▶ bool ☀Is_Closed_Box(Method_Item const& method)❰

  if (!method.return_results.empty()){
    return false;
  }
  
  for (auto arg: method.function_arguments){
    auto direction = Argument_Direction_Decider::Decide_Direction(arg);
    if (direction !=  Doxygen_Parameter_Direction::IN){
      return false;
    }
  }
  return true;
❱

class

❪variant❫
❪"code/utilities/types/variant/lib"❫
❪"code/utilities/comments/doxygen/settings/doxygen_parameter_direction"❫
⚯
❪"code/utilities/types/converters/lib"❫
❪"code/utilities/types/strings/transformers/stripping/lib"❫
❪"code/utilities/types/strings/observers/other/lib"❫
❪"code/utilities/code/query/argument_direction_decider"❫
⚞⚟


◀public: static▶ std::vector<Direct_Method_Call_And_Count> ☀Get(Method_Item const& method)❰
  std::vector<Direct_Method_Call_And_Count> calls;
  
    for (auto it: method.entire_body.elements){
        std::visit(overloaded {
            
        //comments
        [&](Regular_Body_Comment const& a) {},
        [&](Todo_Body_Comment const& a)    {},
        [&](Warning_Body_Comment const& a) {},
        [&](Regular_Statement const& a)    {},
        [&](Return_Statement const& a)     {},
        [&](Uncaught_Statement const& a)   {},
        
        [&](Function_Call_Local const& a){
            auto function_name = as_string(a.value.value);
        },
        }, it.types);
    }
  
  
  
  return calls;
❱
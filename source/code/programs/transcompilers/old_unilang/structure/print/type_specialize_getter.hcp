class
❪iostream❫
❪string❫
⚯
❪"code/utilities/types/converters/lib"❫
⚞⚟


◀public: static▶ std::string ☀Get(std::vector<Type_Specialization> const& type_specializations)❰
    std::string special;
    
    if (!type_specializations.empty()){
        special += "<";
    }
    
    for (auto const& it: type_specializations){
            special += as_string(it.type.value);
        }
        
    if (!type_specializations.empty()){
        special += ">";
    }
    return special;
❱
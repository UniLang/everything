class

❪string❫
❪"code/utilities/linguistics/computer/frontends/parts/method/attributes/specific/parts/attribute_style"❫
⚯

⚞⚟

◀public: static▶ std::string ☀Convert(Attribute_Style const& style)❰
  
  std::string result;

  Append_Newline_On_Condition(result,style.new_line_before_attribute);
  switch(style.technique){
    case Attribute_Technique::GCC:       result += style.gcc;       break;
    case Attribute_Technique::CLANG:     result += style.clang;     break;
    case Attribute_Technique::MICROSOFT: result += style.microsoft; break;
    case Attribute_Technique::SPLINT:    result += style.splint;    break;
    case Attribute_Technique::STD:       result += style.std;       break;
    case Attribute_Technique::CUSTOM:    result += style.custom;    break;
  }
  
  if (style.put_comment_at_the_end){
    result += "// " + style.comment_text;
  }
  Append_Newline_On_Condition(result,style.new_line_after_attribute);
  
  return result;
❱

◀private: static▶ void ☀Append_Newline_On_Condition(std::string & str, bool condition)❰
	if (condition){str+= '\n';}
❱
class


⚯
❪"code/utilities/types/strings/transformers/casing/lib"❫
❪"code/utilities/types/strings/transformers/appending/lib"❫
⚞⚟


◀public: static▶ std::string ☀Get_Top_Comment()❰
    std::string str;
    
    Append_With_Newline(str,"//Wrapper class for easier testing");
    Append(str,"//DO NOT EDIT; this is generated code");
    
    return str;
❱

◀public: static▶ bool ☀Contains_Data_Members_That_Can_Be_Destructured(std::vector<Data_Member_Item> const& data_members)❰
for (auto it: data_members){

    if (it.is_observable || it.is_obtainable){
        return true;
   }
}

return false;
❱

◀public: static▶ std::string ☀Get_Wrapped_Object_Type_Name(std::string name, bool dumb_name)❰
    if (dumb_name){
        return As_Capital_And_Pushed_Together(name) + "OutputsT";
    }else{
        return As_Capital_And_Pushed_Together(name) + "T";
    }
❱
class
❪string❫
❪"code/utilities/data_structures/graph/unique_str_vertex_graph/lib"❫
⚯
⚞⚟
◀public: static▶ Unique_Str_Vertex_Graph ☀Get() ❰

    Unique_Str_Vertex_Graph tree;
    
    //TODO: THIS IS A TEST
    //IT MIGHT BE SOMETHING WE WANT TO TRY AND DEVELOP
    //do something with nested lambdas so this is easy to build
    //the future of building a mapping to the unilang structure 
    std::string x = "root";
    std::string a = x + "meta";
    tree.Connect(x,a);
    tree.Connect(a,a+"code_type");
    tree.Connect(a,a+"brief");
    tree.Connect(a,a+"detailed");
    tree.Connect(a,a+"group_name");
    tree.Connect(a,a+"author");
    tree.Connect(a,a+"bug");
    tree.Connect(a,a+"warning");
    tree.Connect(a,a+"depreciation");
        std::string b = a + "subgroup";
        tree.Connect(a,b);
        tree.Connect(b,b+"name");
        tree.Connect(b,b+"description");
        std::string c = a + "specification_file";
        tree.Connect(a,c);
        tree.Connect(c,c+"name");
        tree.Connect(c,c+"description");
        std::string d = a + "foreseeable change";
        tree.Connect(a,d);
        tree.Connect(d,d+"change");
        tree.Connect(d,d+"path");
        tree.Connect(d,d+"description");
    
    return tree;

❱
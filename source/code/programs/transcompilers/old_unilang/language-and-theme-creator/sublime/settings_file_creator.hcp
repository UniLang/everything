class


⚯
❪"code/utilities/types/converters/lib"❫
❪"code/utilities/filesystem/paths/lib"❫
⚞⚟

◀public: static▶ void ☀Create_Settings_File() ❰

    Set_Path(Shared::Sublime_Settings_Path());
    Create_Path_If_It_Doesnt_Already_Exist("User");
    
    Create_Unilang_Settings_File();
    Create_Cpp_Settings_File();
    Create_Plain_Settings_File();
    Create_Main_Preferences_File();
❱


◀private: static▶ void ☀Create_Unilang_Settings_File() ❰
    std::wofstream out(SETTINGS_FILE);
    out << "{" << '\n';
    out << "\"color_scheme\": \"Packages/UniLang/default.tmTheme\"," << '\n';
    out << "\"font_face\": \"Unilang\"," << '\n';
    out << "\"font_size\": 9," << '\n';
    out << "\"font_options\": [\"no_antialias\",\"no_bold\",\"no_italic\"]," << '\n';
    out << "\"extensions\":" << '\n';
    out << "[" << '\n';
    out << "\"UniLang\"" << '\n';
    out << "]" << '\n';
    out << "}" << '\n';
❱
◀private: static▶ void ☀Create_Cpp_Settings_File() ❰
std::string text = R"RAW(
{
    "color_scheme": "Packages/Color Scheme - Default/Monokai.tmTheme",
    "extensions":
    [
        "h",
        "hcp"
    ]
}
)RAW";
std::ofstream out(CPP_SETTINGS_FILE);
out << text;

❱
◀private: static▶ void ☀Create_Plain_Settings_File() ❰
std::string text = R"RAW(
// These settings override both User and Default settings for the Plain text syntax
{
    "color_scheme": "Packages/Color Scheme - Default/Monokai.tmTheme"
}
)RAW";
std::ofstream out(PLAIN_SETTINGS_FILE);
out << text;
❱

◀private: static▶ void ☀Create_Main_Preferences_File() ❰
std::string text = R"RAW(
{
    //generate this file when you can
    //The Way Code Looks
    "color_scheme": "Packages/Color Scheme - Default/Cobalt.tmTheme",  //color scheme
    "font_face": "unilang",                                           //font name
    "font_size": 8,                                                    //font size
    "font_options": [],                                                //no special font adjustments
    "line_padding_top": -1,                                            //keep the horizontal spacing tight
    "line_padding_bottom": 0,                                          //keep the horizontal spacing tight

    //The Line Number Column
    "gutter": true,                                                    //show the column where line numbers are
    "margin": 0,                                                       //small amount of space between line number column and code
    "line_numbers": true,                                              //show the line numbers
    "fold_buttons": true,                                              //provide fold triangles on code
    "fade_fold_buttons": false,                                        //always show the triangles

    //Other
    "rulers": [],                                                      //don't show any rulers
    "spell_check": true,                                               //turn on spell check
    "dictionary": "Packages/Language - English/en_US.dic",             //dictionary to use
    "tab_size": 4,                                                     //tabs = 4 spaces
    "translate_tabs_to_spaces": true,                                  //automatically make tabs spaces
    "detect_indentation": true,                                        //tells the difference between tabs and spaces (I don't think it changes them though)
    "use_tab_stops": true,                                             //I like the idea of tab-stops (not sure how well it works)
    "auto_indent": true,                                               //Indents automatically
    "smart_indent": true,                                              //Hopefully indents intelligently
    "indent_to_bracket": true,                                         //Indents brackets correctly
    "trim_automatic_white_space": false,                               //keeps indent even if there is no code there
    "scroll_speed": 0,                                                 //scrolling is immediate
    "word_separators": "./\\()\"'-:,.;<>~!@#$%^&*|+=[]{}`~?",          //symbols in between words (not to sure the point)
    "word_wrap": "auto",                                               //disable horizontal scrolling
    "wrap_width": 0,                                                   //something with wrapping (not sure)
    "indent_subsequent_lines": true,                                   //something with wrapping (not sure)
    "draw_centered": false,                                            //keep the text as left aligned
    "auto_match_enabled": false,                                       //I actually don't like automatic pairing of quotes, brackets etc
    "show_minimap": false,                                             //I don't want the mini-map
    "always_show_minimap_viewport": true,                              //always show where you are on mini-map
    "draw_minimap_border": true,                                       //border on mini-map
    "highlight_line": true,                                            //highlight current line
    "match_brackets": true,                                            //show the matching bracket
    "match_brackets_square": true,                                     //show the matching brackets []
    "match_brackets_braces": true,                                     //show the matching bracket {}
    "match_brackets_angle": false,                                     //show the matching bracket <>
    "match_brackets_content": true,                                    //show the matching brackets if you are in the body of the brackets
    
    "match_tags": true, //match tags for tag based languages
    "match_selection": true, //show matches of currently selected text
    
    //Cursor
    "caret_style": "solid",                                            //no blinking cursor
    "caret_extra_top": 0,                                              //adjusts size
    "caret_extra_bottom": 0,                                           //adjusts size
    "caret_extra_width": 0,                                            //adjusts size
    
    "scroll_past_end": false,  //don't allow scrolling past the end of the file
    "move_to_limit_on_up_down": false, //makes arrow keys not do anything special on the top/bottom of the file
    "draw_white_space": "all", //show white space markers always
    "draw_indent_guides": true, //show horizontal indent lines
    "indent_guide_options": ["draw_normal"],// show horizontal indent lines (not just active ones)
    
    //When Saving
    "trim_trailing_white_space_on_save": false, //don't remove railing whitespace
    "ensure_newline_at_eof_on_save": false,     //don't put newline at the end of file
    
    "save_on_focus_lost": true, //automatically save files when switching between them
    "atomic_save": true, //save by writing to an alternative file and then overwriting (I guess..?)
    "default_encoding": "UTF-8", //default save encoding
    "fallback_encoding": "Western (Windows 1252)", //fallback encoding to pick
    "enable_hexadecimal_encoding": true, //null byte characters are to be opened as hexadecimal
    "default_line_ending": "system", //the default line end for files is determined by the system
    
    "tab_completion": true, //automatic tab completion
    
    //Auto Complete Settings
    "auto_complete": true, //auto-complete while typing (I don't like how enter chooses though)
    "auto_complete_size_limit": 4194304, //If the file gets too big we should stop auto complete (I kind of always want auto complete no matter what)
    "auto_complete_delay": 0, //show auto complete immediately
    "auto_complete_selector": "source - comment, meta.tag - punctuation.definition.tag.begin", //auto complete scope (not sure)
    "auto_complete_triggers": [ {"selector": "text.html", "characters": "<"} ],                //auto complete triggers (not sure)
    "auto_complete_commit_on_tab": true, //commit auto complete on tab instead of enter
    "auto_complete_with_fields": true, //not sure
    
    "auto_close_tags": false, //don't automatically close tags in tag based languages (mainly because I'm writing in php or cold fusion, etc)
    "shift_tab_unindent": false, //shift+tab always unindents
    "copy_with_empty_selection": true, //copy/cut the current line if nothing is selected upon action
    
    "find_selected_text": true,      //when finding text
    "auto_find_in_selection": false, //when finding text
    "drag_text": false, //doesn't work in linux right now anyway


    //UI apparently
    "theme": "Default.sublime-theme",
    "animation_enabled": false, //no animation at all in the application
    "tree_animation_enabled": false, //no animation of file tree
    "highlight_modified_tabs": false, //I'm hiding tabs anyway
    "show_tab_close_buttons": false,  //I'm hiding tabs anyway
    "bold_folder_labels": true,       //show folders in bold
    
    
    //OS X only settings
    "use_simple_full_screen": false, //I'm not going to ever do full screen
    "gpu_window_buffer": "auto",
    "overlay_scroll_bars": "system",
    "enable_tab_scrolling": true,
    "show_encoding": false,
    "show_line_endings": false,
    
    //Application Behavior Settings
    "hot_exit": false,
    "remember_open_files": false,
    


    "ignored_packages":
    [
        "SublimeLinter-cppcheck",
        "SublimeLinter-cpplint",
        "Tag",
        "SideBarEnhancements",
        "Vintage",
        "SideBarFolders",
        "SyncedSideBar",
        "Kellys Color Scheme",
        "HTMLAttributes",
        "Git"
    ],
"file_exclude_patterns":
[
    "*.tmTheme.cache",
    "*.tmPreferences.cache",
    "*.tmLanguage.cache",
    "*.pyc",
    "*.pyo",
    "*.exe",
    "*.dll",
    "*.obj",
    "*.o",
    "*.a",
    "*.lib",
    "*.so",
    "*.dylib",
    "*.ncb",
    "*.sdf",
    "*.suo",
    "*.pdb",
    "*.idb",
    ".DS_Store",
    "*.class",
    "*.psd",
    "*.db",
    "*.d",
]
}
)RAW";
std::ofstream out(PREFERENCES_FILE);
out << text;
❱
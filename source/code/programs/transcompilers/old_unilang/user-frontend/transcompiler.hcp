class
❪vector❫
❪string❫
⚯
⚞⚟

◀public: static▶ std::vector<std::string> ☀Create_All_The_Artifacts(Actionable_Code_Graphs const& graphs, Program_Input const& input)❰

    std::vector<std::string> created_files;
    
    //create new files from all the data structures
    created_files += Transcompile_Each_Code_Graph(graphs,input);
    
    //create additional files with all of the data structures (usually build files / other meta)
    created_files += Transcompile_Extra_Files(graphs,input);
    
    return created_files;
❱

◀private: static▶ std::vector<std::string> ☀Transcompile_Extra_Files(Actionable_Code_Graphs const& graphs, Program_Input const& input)❰

    std::vector<std::string> created_files;
    created_files += Compiler::Compile(graphs,input);
    return created_files;
❱
◀private: static▶ std::vector<std::string> ☀Transcompile_Each_Code_Graph(Actionable_Code_Graphs const& graphs, Program_Input const& input)❰

    std::vector<std::string> created_files;
    for (auto const& it: graphs.graphs){
        created_files += Compiler::Compile(it,input);
    }
    return created_files;
❱
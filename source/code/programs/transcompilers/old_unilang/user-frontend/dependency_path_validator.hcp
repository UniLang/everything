class

❪algorithm❫
❪iostream❫
❪"code/utilities/filesystem/paths/lib"❫
⚯

⚞⚟
◀public: static▶ void ☀Validate_Paths_By_Removing_And_Warning_About_Invalid_Paths(Dependency_Paths & dependency_paths)❰


    //warn and remove any paths that don't exist
    Warn_And_Remove_Unreachable_Paths(dependency_paths.recursive);
    Warn_And_Remove_Unreachable_Paths(dependency_paths.single);
❱

◀private: static▶ void ☀Warn_And_Remove_Unreachable_Paths(std::vector<std::string> & paths)❰

    //use "erase_if:" when available
    paths.erase( std::remove_if(paths.begin(), paths.end(), [](std::string path){
        if (!Directory_Exists(path)){
            std::cerr << path << " does not exist.  It will be ignored.\n";
            return true;
        }
        
        return false;
    }), paths.end() );
❱

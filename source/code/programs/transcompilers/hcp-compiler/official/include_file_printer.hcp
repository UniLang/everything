class
❪iostream❫
❪string❫
❪fstream❫
❪"class_structure"❫
⚯
❪"code/utilities/types/strings/observers/other/lib"❫
❪"code/utilities/types/strings/observers/path/lib"❫
❪"code/utilities/types/strings/transformers/removing/lib"❫
❪"code/utilities/types/strings/transformers/casing/lib"❫
❪"code/utilities/types/wstrings/transformers/trimming/lib"❫
❪"code/utilities/types/wstrings/transformers/other/lib"❫
❪"code/utilities/types/converters/lib"❫
⚞⚟


◀public: static▶ void ☀Print(std::wofstream & outfile, std::vector<std::pair<std::wstring,bool>> const& includes)❰

    std::string default_extension_if_not_provided = ".hpp";
    for (auto it: includes){
        if (it.second){
            outfile << "#include ";
            if (Begins_And_Ends_With(it.first,L'"')){
                
                auto str = as_string(it.first);
                Remove_First_And_Last_Char(str);
                outfile << "\"";
                outfile << as_wstring(str);
                if (!File_Has_Extension(str)){
                    outfile << as_wstring(default_extension_if_not_provided);
                }
                outfile << "\"";
            }else{
                outfile << "<" << it.first << ">";
            }
            outfile << '\n';
        }
    }
❱
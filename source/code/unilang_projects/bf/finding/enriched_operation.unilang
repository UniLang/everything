􏶞o􏶟
􏷲Operations with resolved metadata􏷱
􏷰Operations contain metadata which is not readily available when obtaining the operation
additional calls must be made to retrieve parts of metadata based on digests
Often times an operation can't be evaluated without also evaluating the command of the operation
In these contexts, it would be more helpful to operate on an enriched operation that already has its important metadata resolved􏷯
􏷞build􏷝􏷞buildfarm􏷝􏷞operations􏷝

􏷤􏷣􏷦com.google.common.collect.LinkedHashMultimap􏷥
􏷤􏷣􏷦com.google.common.collect.Lists􏷥
􏷤􏷣􏷦com.google.common.collect.SetMultimap􏷥
􏷤􏷣􏷦java.util.List􏷥
􏷤􏷣􏷦build.buildfarm.common.redis.BalancedRedisQueue􏷥
􏷤􏷣􏷦redis.clients.jedis.JedisCluster􏷥
􏷤􏷣􏷦java.util.HashSet􏷥
􏷤􏷣􏷦java.util.Map􏷥
􏷤􏷣􏷦java.util.Set􏷥
􏷤􏷣􏷦com.google.common.collect.ImmutableSet􏷥
􏷤􏷣􏷦com.google.common.collect.ImmutableSetMultimap􏷥
􏷤􏷣􏷦java.util.stream.Collectors􏷥
􏷤􏷣􏷦build.bazel.remote.execution.v2.Action􏷥
􏷤􏷣􏷦build.bazel.remote.execution.v2.ActionResult􏷥
􏷤􏷣􏷦build.bazel.remote.execution.v2.Command􏷥
􏷤􏷣􏷦com.google.longrunning.Operation􏷥
􏷤􏷣􏷦com.google.protobuf.util.JsonFormat􏷥
􏷤􏷣􏷦org.json.simple.JSONObject􏷥
􏷤􏷣􏷦com.google.protobuf.InvalidProtocolBufferException􏷥
􏷤􏷣􏷦com.google.protobuf.Duration􏷥
􏷤􏷣􏷦com.google.protobuf.util.Durations􏷥
􏷤􏷣􏷦io.grpc.Deadline􏷥
􏷤􏷣􏷦java.util.concurrent.TimeUnit􏷥
􏷤􏷣􏷦build.buildfarm.common.grpc.GrpcEndpoint􏷥
􏷤􏷣􏷦build.bazel.remote.execution.v2.ExecuteRequest􏷥
􏷤􏷣􏷦build.bazel.remote.execution.v2.ExecutionGrpc􏷥
􏷤􏷣􏷦build.bazel.remote.execution.v2.RequestMetadata􏷥
􏷤􏷣􏷦build.bazel.remote.execution.v2.WaitExecutionRequest􏷥
􏷤􏷣􏷦build.buildfarm.common.Time􏷥
􏷤􏷣􏷦build.buildfarm.common.Watcher􏷥
􏷤􏷣􏷦build.buildfarm.common.grpc.GrpcEndpoint􏷥
􏷤􏷣􏷦build.buildfarm.common.grpc.GrpcEndpointHandler􏷥
􏷤􏷣􏷦build.buildfarm.common.grpc.TracingMetadataUtils􏷥
􏷤􏷣􏷦build.buildfarm.instance.Instance􏷥
􏷤􏷣􏷦build.buildfarm.metrics.MetricsPublisher􏷥
􏷤􏷣􏷦com.google.common.util.concurrent.FutureCallback􏷥
􏷤􏷣􏷦com.google.common.util.concurrent.ListenableFuture􏷥
􏷤􏷣􏷦com.google.longrunning.Operation􏷥
􏷤􏷣􏷦com.google.protobuf.util.Durations􏷥
􏷤􏷣􏷦io.grpc.Context􏷥
􏷤􏷣􏷦io.grpc.Status􏷥
􏷤􏷣􏷦io.grpc.stub.ServerCallStreamObserver􏷥
􏷤􏷣􏷦io.grpc.stub.StreamObserver􏷥
􏷤􏷣􏷦java.util.concurrent.CancellationException􏷥
􏷤􏷣􏷦java.util.concurrent.ScheduledExecutorService􏷥
􏷤􏷣􏷦java.util.concurrent.TimeUnit􏷥
􏷤􏷣􏷦java.util.logging.Level􏷥
􏷤􏷣􏷦java.util.logging.Logger􏷥
􏷤􏷣􏷦javax.annotation.Nullable􏷥
􏷤i􏷣􏷦com.google.common.util.concurrent.MoreExecutors.directExecutor􏷥
􏷤􏷣􏷦redis.clients.jedis.Jedis􏷥
􏷤􏷣􏷦redis.clients.jedis.JedisCluster􏷥
􏷤􏷣􏷦redis.clients.jedis.Response􏷥
􏷤􏷣􏷦redis.clients.jedis.ScanParams􏷥
􏷤􏷣􏷦redis.clients.jedis.ScanResult􏷥
􏷤􏷣􏷦java.util.List􏷥
􏷤􏷣􏷦java.util.ArrayList􏷥
􏷤􏷣􏷦com.google.longrunning.Operation􏷥
􏷤􏷣􏷦java.io.IOException􏷥
􏷤􏷣􏷦java.util.Collection􏷥
􏷤􏷣􏷦redis.clients.jedis.Jedis􏷥
􏷤􏷣􏷦redis.clients.jedis.JedisPool􏷥
􏷤􏷣􏷦redis.clients.jedis.JedisCluster􏷥
􏷤􏷣􏷦redis.clients.jedis.ScanParams􏷥
􏷤􏷣􏷦redis.clients.jedis.ScanResult􏷥
􏷤􏷣􏷦com.google.protobuf.util.JsonFormat􏷥
􏷤􏷣􏷦build.buildfarm.v1test.ExecutingOperationMetadata􏷥
􏷤􏷣􏷦build.buildfarm.v1test.QueuedOperationMetadata􏷥
􏷤􏷣􏷦build.buildfarm.v1test.CompletedOperationMetadata􏷥
􏷤􏷣􏷦build.bazel.remote.execution.v2.RequestMetadata􏷥
􏷤􏷣􏷦build.bazel.remote.execution.v2.ExecuteOperationMetadata􏷥
􏷤􏷣􏷦com.google.protobuf.InvalidProtocolBufferException􏷥
􏷤􏷣􏷦com.google.rpc.PreconditionFailure􏷥
􏷤􏷣􏷦build.buildfarm.v1test.CompletedOperationMetadata􏷥
􏷤􏷣􏷦build.buildfarm.v1test.CompletedOperationMetadata􏷥
􏷤􏷣􏷦build.buildfarm.v1test.ExecutingOperationMetadata􏷥
􏷤􏷣􏷦build.buildfarm.v1test.OperationTimesBetweenStages􏷥
􏷤􏷣􏷦build.buildfarm.v1test.QueuedOperation􏷥
􏷤􏷣􏷦build.buildfarm.v1test.QueuedOperationMetadata􏷥
􏷤􏷣􏷦build.buildfarm.v1test.StageInformation􏷥
􏷤􏷣􏷦build.buildfarm.v1test.Tree􏷥
􏷤􏷣􏷦build.buildfarm.v1test.WorkerProfileMessage􏷥
􏷤􏷣􏷦build.bazel.remote.execution.v2.Action􏷥
􏷤􏷣􏷦build.bazel.remote.execution.v2.ActionResult􏷥
􏷤􏷣􏷦build.bazel.remote.execution.v2.Command􏷥
􏷤􏷣􏷦build.bazel.remote.execution.v2.Command.EnvironmentVariable􏷥
􏷤􏷣􏷦build.bazel.remote.execution.v2.Digest􏷥
􏷤􏷣􏷦build.bazel.remote.execution.v2.Directory􏷥
􏷤􏷣􏷦build.bazel.remote.execution.v2.DirectoryNode􏷥
􏷤􏷣􏷦build.bazel.remote.execution.v2.ExecuteOperationMetadata􏷥
􏷤􏷣􏷦build.bazel.remote.execution.v2.ExecuteResponse􏷥
􏷤􏷣􏷦build.bazel.remote.execution.v2.ExecutedActionMetadata􏷥
􏷤􏷣􏷦build.bazel.remote.execution.v2.FileNode􏷥
􏷤􏷣􏷦build.bazel.remote.execution.v2.OutputDirectory􏷥
􏷤􏷣􏷦build.bazel.remote.execution.v2.OutputFile􏷥
􏷤􏷣􏷦build.bazel.remote.execution.v2.RequestMetadata􏷥
􏷤􏷣􏷦build.bazel.remote.execution.v2.ServerCapabilities􏷥
􏷤􏷣􏷦build.buildfarm.instance.Utils􏷥
􏷤􏷣􏷦com.google.protobuf.ByteString􏷥
􏷤􏷣􏷦org.json.simple.JSONObject􏷥
􏷤􏷣􏷦org.json.simple.JSONValue􏷥
􏷤􏷣􏷦org.json.simple.parser.JSONParser􏷥


􏶨The main operation object which contains digests to the remaining data members􏶧
􏶦its digests are used to resolve other data members􏶥
􏶘+􏶙􏶰􏶯􏶮Operation􏶭􏶬operation􏶫􏶪􏶩

􏶨The resolved action of the operation􏶧
􏶦created from the digest in the operation􏶥
􏶘+􏶙􏶰􏶯􏶮Action􏶭􏶬action􏶫􏶪􏶩

􏶨The resolved command of the action􏶧
􏶦created from the digest in the action􏶥
􏶘+􏶙􏶰􏶯􏶮Command􏶭􏶬command􏶫􏶪􏶩

􏷐Convert the structure into a json string􏷏
􏶠Uses proto to json serialization where appropriate􏶡
􏷘+􏷗􏴅Observers􏴆􏷒as json string􏷑
􏶾String􏶽􏶼json􏶻􏶺the structure as a json string􏶹
􏶴
    JSONObject obj = new JSONObject();
    try {

      JsonFormat.Printer operationPrinter =
          JsonFormat.printer()
              .usingTypeRegistry(
                  JsonFormat.TypeRegistry.newBuilder()
                      .add(CompletedOperationMetadata.getDescriptor())
                      .add(ExecutingOperationMetadata.getDescriptor())
                      .add(ExecuteOperationMetadata.getDescriptor())
                      .add(QueuedOperationMetadata.getDescriptor())
                      .add(PreconditionFailure.getDescriptor())
                      .build());

      JSONParser j = new JSONParser();
      obj.put("operation", j.parse(operationPrinter.print(operation)));
      obj.put("action", j.parse(JsonFormat.printer().print(action)));
      obj.put("command", j.parse(JsonFormat.printer().print(command)));
    } catch (Exception e) {
    }
    return obj.toJSONString();
􏶳
􏶞g􏶟
􏷲Adjusts the wattages of various graph nodes provoked by other systems􏷱
􏷰Iterates over the wattage changes that need to be made to the graph􏷯
􏷮Electrical_System􏷭 􏷮Breaker_Applier􏷭
􏷬Trevor Hickey􏷫

􏷤􏷣􏷦vector􏷥􏴓d􏴔􏴑VectorT􏴒
􏷤􏷣􏷦wattage_device_binding􏷥􏴓d􏴔􏴑WattageDeviceBindingT􏴒
􏷤􏷣􏷦DCPowerSystem􏷥􏴓d􏴔􏴑DCPowerSystemT􏴒

􏷘+􏷗􏷒apply electrical wattage changes􏷑
􏷐Adjusts the wattages of various graph nodes provoked by other systems􏷏
􏶠Some systems may decide to change the wattage of their devices.  
This applies those changes to the graph nodes, so the power source amp totals can be adjusted accordingly􏶡
􏶜mr􏶝􏷆DCPowerSystemT􏷅􏷄dc system􏷃􏷀The DC power system􏶿
􏶜mr􏶝􏷆VectorT􏷅􏷄wattage changes􏷃􏷀all of the wattage changes􏶿
􏶴
  􏶲iterate over all of our wattage changes coming in, and apply them to the corresponding graph nodes􏶱
  VectorForEach1(􏵶wattage changes􏵷,(BinaryActionT)ApplyWattageChange,􏵶dc system􏵷);
􏶳

􏷘-􏷗􏷒apply wattage change􏷑
􏷐Applies a particular wattage change to a particular graph node􏷏
􏶠This applies the change regardless of whether the node is powered or not.  
If the node isn't powered it won't affect the amp draws, but it will still change the graph node􏶡
􏶜mr􏶝􏷆WattageDeviceBindingT􏷅􏷄element􏷃􏷀a binded wattage change􏶿
􏶜mr􏶝􏷆DCPowerSystemT􏷅􏷄dc system􏷃􏷀The DC power system􏶿
􏶴
  NodeSetActiveWattage(ElectricalGraphGetCircuitComponent(&􏵶dc system􏵷->m_tCircuit.m_tGraph,􏵶element􏵷->m_uId),􏵶element􏵷->m_fNewWattage_w);
􏶳
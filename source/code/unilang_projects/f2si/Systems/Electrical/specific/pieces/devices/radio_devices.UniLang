􏶞p􏶟
􏷲The 􏶏 specific to the UH72A DC power system.􏷱
􏷰Stores a collection of 􏶏 and builds them into the generic electrical graph.􏷯
􏷮Electrical_System􏷭 􏷮Radio_Devices􏷭
􏷬Trevor Hickey􏷫

􏷤􏷣􏷦stddef􏷥􏴓1􏴔􏴑size_t􏴒
􏷤􏷣􏷦ElectricalGraph􏷥􏴓d􏴔􏴑ElectricalGraphT􏴒
􏶔􏶕􏶒string􏶓􏴏d􏴐􏴍strcpy()􏴎

􏷘+􏷗􏷒􏶐􏷑
􏷐Initialize the 􏶐􏷏
􏶠􏶐 will be in an invalid state until initialized.
Initializing a 􏶐 will construct all of its nodes into the generic electrical graph.
It will store the IDs given back by the graph so that they may be queried later by the user.􏶡
􏶜mr􏶝􏷆ElectricalGraphT􏷅􏷄graph􏷃􏷀A generic electrical graph that the 􏶏 will construct its nodes into.􏶿
􏶜􏶝􏷆char[]􏷅􏷄tag name􏷃􏷀a unique tag name for the following stored nodes􏶿
􏶴
  􏶲create all the internal nodes inside the graph data structure􏶱
  􏵲create nodes􏵳􏵶graph􏵷,􏵶tag name􏵷);
  
  􏶲connect these newly created nodes􏶱
  􏵲create wires􏵳􏵶graph􏵷);
􏶳

􏷘-􏷗􏷒create nodes􏷑
􏷐Constructs all of the electrical components into the generic electrical graph data structure.􏷏
􏶠This will give all of the node a valid id for querying the graph later.􏶡
􏶜mr􏶝􏷆ElectricalGraphT􏷅􏷄graph􏷃􏷀A generic electrical graph that the 􏶏 will construct its nodes into.􏶿
􏶜􏶝􏷆char[]􏷅􏷄tag name􏷃􏷀a unique tag name for the following stored nodes􏶿
􏶴
  􏶲create all of the vertices that are part of the 􏶐􏶱
  
  􏶲add nodes to graph􏶱
  􏵴radio altimeter􏵵 = ElectricalGraphAddGroundedDevice(􏵶graph􏵷,"radio altimeter",􏵶tag name􏵷,0.0f,80.32f,CAN_BE_POWERED_YES);
  􏵴wulfsberg c5000􏵵 = ElectricalGraphAddGroundedDevice(􏵶graph􏵷,"wulfsberg c5000",􏵶tag name􏵷,0.0f,11.735f,CAN_BE_POWERED_YES);
  􏵴garmin 430􏵵[0] = ElectricalGraphAddGroundedDevice(􏵶graph􏵷,"copilot garmin 430",􏵶tag name􏵷,0.0f,11.735f,CAN_BE_POWERED_YES);
  􏵴garmin 430􏵵[1] = ElectricalGraphAddGroundedDevice(􏵶graph􏵷,"pilot garmin 430",􏵶tag name􏵷,0.0f,11.735f,CAN_BE_POWERED_YES);
  􏵴nav receiver􏵵[0] = ElectricalGraphAddGroundedDevice(􏵶graph􏵷,"copilot nav receiver",􏵶tag name􏵷,0.0f,11.735f,CAN_BE_POWERED_YES);
  􏵴nav receiver􏵵[1] = ElectricalGraphAddGroundedDevice(􏵶graph􏵷,"pilot nav receiver",􏵶tag name􏵷,0.0f,11.735f,CAN_BE_POWERED_YES);
  􏵴gtx330􏵵 = ElectricalGraphAddGroundedDevice(􏵶graph􏵷,"gtx330",􏵶tag name􏵷,0.0f,11.735f,CAN_BE_POWERED_YES);
  􏵴arc231 control􏵵 = ElectricalGraphAddGroundedDevice(􏵶graph􏵷,"arc231 control",􏵶tag name􏵷,0.0f,80.32f,CAN_BE_POWERED_YES);
  􏵴audio panel backup􏵵[0] = ElectricalGraphAddGroundedDevice(􏵶graph􏵷,"copilot audio panel backup",􏵶tag name􏵷,0.0f,11.735f,CAN_BE_POWERED_YES);
  􏵴audio panel backup􏵵[1] = ElectricalGraphAddGroundedDevice(􏵶graph􏵷,"pilot audio panel backup",􏵶tag name􏵷,0.0f,11.735f,CAN_BE_POWERED_YES);
  􏵴audio panel􏵵[0] = ElectricalGraphAddGroundedDevice(􏵶graph􏵷,"copilot audio panel",􏵶tag name􏵷,0.0f,11.735f,CAN_BE_POWERED_YES);
  􏵴audio panel􏵵[1] = ElectricalGraphAddGroundedDevice(􏵶graph􏵷,"pilot audio panel",􏵶tag name􏵷,0.0f,11.735f,CAN_BE_POWERED_YES);
  􏵴audio panel ics cabin􏵵[0] = ElectricalGraphAddGroundedDevice(􏵶graph􏵷,"copilot audio panel ics cabin",􏵶tag name􏵷,0.0f,11.735f,CAN_BE_POWERED_YES);
  􏵴audio panel ics cabin􏵵[1] = ElectricalGraphAddGroundedDevice(􏵶graph􏵷,"pilot audio panel ics cabin",􏵶tag name􏵷,0.0f,11.735f,CAN_BE_POWERED_YES);
  􏵴audio panel ics speaker􏵵[0] = ElectricalGraphAddGroundedDevice(􏵶graph􏵷,"copilot audio panel ics speaker",􏵶tag name􏵷,0.0f,11.735f,CAN_BE_POWERED_YES);
  􏵴audio panel ics speaker􏵵[1] = ElectricalGraphAddGroundedDevice(􏵶graph􏵷,"pilot audio panel ics speaker",􏵶tag name􏵷,0.0f,11.735f,CAN_BE_POWERED_YES);
  􏵴marker beacon􏵵 = ElectricalGraphAddGroundedDevice(􏵶graph􏵷,"marker beacon",􏵶tag name􏵷,0.0f,80.32f,CAN_BE_POWERED_YES);
  􏵴dme receiver􏵵[0] = ElectricalGraphAddGroundedDevice(􏵶graph􏵷,"copilot dme receiver",􏵶tag name􏵷,0.0f,80.32f,CAN_BE_POWERED_YES);
  􏵴dme receiver􏵵[1] = ElectricalGraphAddGroundedDevice(􏵶graph􏵷,"pilot dme receiver",􏵶tag name􏵷,0.0f,80.32f,CAN_BE_POWERED_YES);
  􏵴com receiver 1􏵵 = ElectricalGraphAddGroundedDevice(􏵶graph􏵷,"com receiver 1",􏵶tag name􏵷,0.0f,11.735f,CAN_BE_POWERED_YES);
  􏵴com receiver 2􏵵 = ElectricalGraphAddGroundedDevice(􏵶graph􏵷,"com receiver 2",􏵶tag name􏵷,0.0f,11.735f,CAN_BE_POWERED_YES);
  􏵴com receiver 3􏵵 = ElectricalGraphAddGroundedDevice(􏵶graph􏵷,"com receiver 3",􏵶tag name􏵷,0.0f,11.735f,CAN_BE_POWERED_YES);
  􏵴com receiver 4􏵵 = ElectricalGraphAddGroundedDevice(􏵶graph􏵷,"com receiver 4",􏵶tag name􏵷,0.0f,11.735f,CAN_BE_POWERED_YES);
  􏵴com receiver 5􏵵 = ElectricalGraphAddGroundedDevice(􏵶graph􏵷,"com receiver 5",􏵶tag name􏵷,0.0f,11.735f,CAN_BE_POWERED_YES);
  􏵴panel lights􏵵 = ElectricalGraphAddGroundedLight(􏵶graph􏵷,"panel lights",􏵶tag name􏵷,0.0f,11.735f,CAN_BE_POWERED_YES);
  􏵴dme button lights􏵵 = ElectricalGraphAddGroundedLight(􏵶graph􏵷,"dme button lights",􏵶tag name􏵷,0.0f,0.1f,CAN_BE_POWERED_YES);
  􏵴waas indicator panel lights􏵵 = ElectricalGraphAddGroundedDevice(􏵶graph􏵷,"waas indicator panel lights",􏵶tag name􏵷,0.0f,11.735f,CAN_BE_POWERED_YES);
  􏵴nms backlight􏵵 = ElectricalGraphAddGroundedLight(􏵶graph􏵷,"NMS backlight",􏵶tag name􏵷,0.0f,0.5f,CAN_BE_POWERED_YES);
  􏵴remote electronic unit􏵵 = ElectricalGraphAddGroundedDevice(􏵶graph􏵷,"remote electronic unit",􏵶tag name􏵷,0.0f,0.0f,CAN_BE_POWERED_YES);
􏶳

􏷘-􏷗􏷒create wires􏷑
􏷐Connects all of the necessary 􏶐 nodes together.􏷏
􏶠The nodes being connected will need to be created first.􏶡
􏶜mr􏶝􏷆ElectricalGraphT􏷅􏷄graph􏷃􏷀A generic electrical graph that the 􏶏 will construct its wires into.􏶿
􏶴
  􏶲connect nodes together􏶱
  􏶲feel free to add any internal system connections here􏶱
􏶳

􏶨􏶧􏶦􏶥􏶘-g􏶙􏶰􏶯􏶮size_t􏶭􏶬radio altimeter􏶫􏶪0􏶩
􏶨􏶧􏶦􏶥􏶘-g􏶙􏶰􏶯􏶮size_t􏶭􏶬wulfsberg c5000􏶫􏶪0􏶩
􏶨􏶧􏶦􏶥􏶘-g􏶙􏶰􏶯􏶮size_t[2]􏶭􏶬garmin 430􏶫􏶪0􏶩
􏶨􏶧􏶦􏶥􏶘-g􏶙􏶰􏶯􏶮size_t[2]􏶭􏶬nav receiver􏶫􏶪0􏶩
􏶨􏶧􏶦􏶥􏶘-g􏶙􏶰􏶯􏶮size_t􏶭􏶬gtx330􏶫􏶪0􏶩
􏶨􏶧􏶦􏶥􏶘-g􏶙􏶰􏶯􏶮size_t􏶭􏶬arc231 control􏶫􏶪0􏶩
􏶨􏶧􏶦􏶥􏶘-g􏶙􏶰􏶯􏶮size_t[2]􏶭􏶬audio panel backup􏶫􏶪0􏶩
􏶨􏶧􏶦􏶥􏶘-g􏶙􏶰􏶯􏶮size_t[2]􏶭􏶬audio panel􏶫􏶪0􏶩
􏶨􏶧􏶦􏶥􏶘-g􏶙􏶰􏶯􏶮size_t[2]􏶭􏶬audio panel ics cabin􏶫􏶪0􏶩
􏶨􏶧􏶦􏶥􏶘-g􏶙􏶰􏶯􏶮size_t[2]􏶭􏶬audio panel ics speaker􏶫􏶪0􏶩
􏶨􏶧􏶦􏶥􏶘-g􏶙􏶰􏶯􏶮size_t􏶭􏶬marker beacon􏶫􏶪0􏶩
􏶨􏶧􏶦􏶥􏶘-g􏶙􏶰􏶯􏶮size_t[2]􏶭􏶬dme receiver􏶫􏶪0􏶩
􏶨􏶧􏶦􏶥􏶘-g􏶙􏶰􏶯􏶮size_t􏶭􏶬com receiver 1􏶫􏶪0􏶩
􏶨􏶧􏶦􏶥􏶘-g􏶙􏶰􏶯􏶮size_t􏶭􏶬com receiver 2􏶫􏶪0􏶩
􏶨􏶧􏶦􏶥􏶘-g􏶙􏶰􏶯􏶮size_t􏶭􏶬com receiver 3􏶫􏶪0􏶩
􏶨􏶧􏶦􏶥􏶘-g􏶙􏶰􏶯􏶮size_t􏶭􏶬com receiver 4􏶫􏶪0􏶩
􏶨􏶧􏶦􏶥􏶘-g􏶙􏶰􏶯􏶮size_t􏶭􏶬com receiver 5􏶫􏶪0􏶩
􏶨􏶧􏶦􏶥􏶘-g􏶙􏶰􏶯􏶮size_t􏶭􏶬panel lights􏶫􏶪0􏶩
􏶨􏶧􏶦􏶥􏶘-g􏶙􏶰􏶯􏶮size_t􏶭􏶬dme button lights􏶫􏶪0􏶩
􏶨􏶧􏶦􏶥􏶘-g􏶙􏶰􏶯􏶮size_t􏶭􏶬waas indicator panel lights􏶫􏶪0􏶩
􏶨􏶧􏶦􏶥􏶘-g􏶙􏶰􏶯􏶮size_t􏶭􏶬nms backlight􏶫􏶪0􏶩
􏶨􏶧􏶦􏶥􏶘-g􏶙􏶰􏶯􏶮size_t􏶭􏶬remote electronic unit􏶫􏶪0􏶩


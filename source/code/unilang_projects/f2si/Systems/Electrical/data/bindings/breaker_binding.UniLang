􏶞p􏶟
􏷲incoming data that can affect the current state of a breaker􏷱
􏷰The IOS holds an idea of what the breakers should be,
The PLC holds an idea of what the breakers should be,
The electrical graph holds an idea of what the breakers should be.
Store all the information that can affect a breaker's state in a single place􏷯
􏷮electrical􏷭􏷮breaker modifiers􏷭
􏷬Trevor Hickey􏷫

􏷤􏷣􏷦CircuitBreaker􏷥􏴓1􏴔􏴑CircuitBreakerT􏴒
􏷤s􏷣􏷦stddef􏷥􏴓1􏴔􏴑size_t􏴒


CONSTRUCTOR:
􏷘+􏷗􏷒􏶐􏷑
􏷐Initialize the 􏶐􏷏
􏶠􏶐 will be in an invalid state until initialized􏶡
􏶜􏶝􏷆CircuitBreakerT􏷅􏷄ios􏷃􏷀the state of the breaker according to the IOS􏶿
􏶜􏶝􏷆CircuitBreakerT􏷅􏷄plc􏷃􏷀the physical state of the breaker according to the PLC􏶿
􏶜􏶝􏷆size􏷅􏷄id􏷃􏷀a unique id that points to the breaker in the graph􏶿
􏶜m􏶝􏷆CircuitBreakerT*􏷅􏷄result􏷃􏷀the resulting state of the PLC breaker􏶿
􏶴
  
  􏶲assign over all of the data􏶱
  􏵴ios􏵵 = 􏵶ios􏵷;
  􏵴plc􏵵 = 􏵶plc􏵷;
  􏵴id􏵵 = 􏵶id􏵷;
  􏵴result􏵵 = 􏵶result􏵷;
􏶳




DATA: 
􏶨ios trigger􏶧
􏶦the state of the breaker according to the IOS􏶥
􏶘g+􏶙􏶰􏶯􏶮CircuitBreakerT􏶭􏶬ios􏶫􏵚􏵛􏶪􏶩

􏶨plc state􏶧
􏶦the physical state of the breaker according to the PLC􏶥
􏶘g+􏶙􏶰􏶯􏶮CircuitBreakerT􏶭􏶬plc􏶫􏵚􏵛􏶪􏶩

􏶨graph breaker id􏶧
􏶦a unique id that points to the breaker in the graph􏶥
􏶘g+􏶙􏶰􏶯􏶮size􏶭􏶬id􏶫􏵚􏵛􏶪􏶩

􏶨the resulting state of the PLC breaker􏶧
􏶦based on the modifiers, this will the result
It points to a breaker in the output􏶥
􏶘g+􏶙􏶰􏶯􏶮CircuitBreakerT*􏶭􏶬result􏶫􏵚􏵛􏶪􏶩